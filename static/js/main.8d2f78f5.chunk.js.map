{"version":3,"sources":["utils/useCheckMobile.js","components/Header.jsx","utils/parseJwt.js","utils/tokens.js","utils/auth.js","utils/dynamo.js","utils/groups.js","components/PrivateRoute.jsx","components/PublicRoute.jsx","utils/tasks.js","components/Home.jsx","components/About.jsx","components/Copyright.jsx","components/Login.jsx","components/Logout.jsx","components/Register.jsx","components/CreateGroup.jsx","components/JoinGroup.jsx","components/Tasks.jsx","components/Groups.jsx","App.js","reportWebVitals.js","index.js"],"names":["useCheckMobile","useState","windowDimension","setWindowDimension","useEffect","window","innerWidth","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","theme","appBar","zIndex","drawer","title","margin","spacing","textTransform","textAlign","color","logoButton","padding","navButton","width","backgroundColor","navButtonSelected","palette","secondary","light","main","drawerDiv","height","overflow","display","flexDirection","drawerPaperMobile","drawerPaper","paperAnchorLeftMobile","paperAnchorLeft","navLinks","Header","props","classes","handleLoadGroups","groupsStatus","groups","groupsError","location","useLocation","selectedGroup","setSelectedGroup","selectedGroupID","setSelectedGroupID","forEach","group","pathname","startsWith","groupID","S","groupName","isMobile","onscroll","document","body","scrollTop","documentElement","setNavElevation","navElevation","drawerOpen","setDrawerOpen","Fragment","AppBar","position","elevation","className","Toolbar","IconButton","onClick","Button","component","RouterLink","to","Typography","variant","style","flexGrow","Drawer","anchor","open","paper","flexShrink","onClose","List","map","text","index","ListItem","button","selected","ListItemIcon","ListItemText","primary","Divider","subheader","ListSubheader","disableSticky","marginTop","marginBottom","Grid","container","direction","alignItems","justify","item","xs","CircularProgress","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","JSON","parse","REFRESH_TOKEN","initialMemoryTokens","idToken","accessToken","exp","inMemoryTokens","setTokens","Math","min","getTokens","ceil","Date","now","setRefreshToken","localStorage","setItem","getRefreshToken","getItem","clearTokens","removeItem","authCognitoClient","IDENTITY_POOL_ID","REGION","COGNITO_ID","COGNITO_CLIENT_ID","cognitoClient","CognitoIdentityProviderClient","region","login","username","password","a","send","InitiateAuthCommand","AuthFlow","ClientId","AuthParameters","USERNAME","PASSWORD","response","credentials","fromCognitoIdentityPool","client","CognitoIdentityClient","identityPoolId","logins","AuthenticationResult","IdToken","AccessToken","RefreshToken","success","message","register","name","SignUpCommand","Username","Password","UserAttributes","Name","Value","ClientMetadata","process","logout","getValidTokens","refreshToken","RevokeTokenCommand","Token","curTokens","refreshTokens","dynamoClient","getNewDynamoClient","tokens","DynamoDB","generateGroupID","id","i","dig","floor","random","chr","String","fromCharCode","concat","generateValidGroupID","works","groupCode","startTime","console","log","getParams","TableName","Key","GetItemCommand","Item","createGroup","parsedToken","ownerName","ownerID","putGroupParams","N","SS","PutItemCommand","putUserGroupParams","response2","joinGroup","userID","userName","getGroupParams","updateGroupParams","ConditionExpression","UpdateExpression","ExpressionAttributeNames","ExpressionAttributeValues","UpdateItemCommand","response3","listGroups","queryParams","KeyConditionExpression","QueryCommand","listUsersInGroup","IndexName","PrivateRoute","Component","rest","authenticated","setAuthenticated","then","result","catch","err","setGroups","setGroupsStatus","setGroupsError","Items","render","minHeight","state","from","listUserTasks","listUserGroupTasks","createTask","taskName","taskDescription","taskDays","length","taskID","uuidv4","putParams","day","dayIncluded","Home","userTasks","setUserTasks","userTasksStatus","setUserTasksStatus","userTasksMessage","setUserTasksMessage","days","handleGetUserTasks","disabled","task","justifyContent","substring","marginLeft","included","includes","About","Copyright","align","Link","href","link","getFullYear","wrapper","avatar","form","buttonProgress","blue","top","left","Login","history","useHistory","setUsername","setPassword","loginStatus","setLoginStatus","errorMessage","setErrorMessage","event","preventDefault","push","setTimeout","Container","maxWidth","CssBaseline","Avatar","onSubmit","TextField","required","fullWidth","label","type","autoComplete","value","onInput","target","autoFocus","Collapse","in","Card","marginRight","size","fontSize","Box","mt","Logout","logoutStatus","setLogoutStatus","handleLogout","Register","setName","registerStatus","setRegisterStatus","responseMessage","setResponseMessage","CreateGroup","setGroupName","disableElevation","JoinGroup","setGroupCode","toUpperCase","backdrop","closeButton","chips","flexWrap","chip","formControl","minWidth","Tasks","groupUsers","useRouteMatch","path","url","showCreateTask","setShowCreateTask","setTaskName","setTaskDescription","selectedDays","setSelectedDays","assignedUser","setAssignedUser","handleCloseCreateTask","createTaskStatus","setCreateTaskStatus","setCreateTaskMessage","role","exact","Dialog","float","right","e","multiline","FormControl","InputLabel","Select","labelId","multiple","onChange","input","Input","renderValue","Chip","MenuProps","onExited","activeElement","blur","MenuItem","Checkbox","checked","user","Task","useParams","Groups","bottomNavLinks","icon","adminOnly","Group","navigation","setNavigation","val","setGroup","groupAuth","setGroupAuth","groupAuthMessage","setGroupAuthMessage","setGroupUsers","groupUsersStatus","setGroupUsersStatus","groupUsersMessage","setGroupUsersMessage","handleGetGroupUsers","ListItemSecondaryAction","BottomNavigation","showLabels","newValue","bottom","nav","BottomNavigationAction","textDecoration","App","createMuiTheme","ThemeProvider","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8d2f78f5.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst mobileThreshold = 600;\r\n\r\nexport default function useCheckMobile() {\r\n  const [windowDimension, setWindowDimension] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setWindowDimension(window.innerWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimension(window.innerWidth);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const isMobile = windowDimension <= mobileThreshold;\r\n  return isMobile;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {Link as RouterLink, useLocation } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport useCheckMobile from '../utils/useCheckMobile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    textTransform: \"none\",\r\n    textAlign: \"left\",\r\n    color: '#333',\r\n  },\r\n  logoButton: {\r\n    padding: theme.spacing(0),\r\n    textAlign: \"left\",\r\n  },\r\n  navButton: {\r\n    color: '#333',\r\n    width: '100%',\r\n    '&:hover':{\r\n      backgroundColor: '#ddd',\r\n    }\r\n  },\r\n  navButtonSelected: {\r\n    color: '#333',\r\n    width: '100%',\r\n    backgroundColor: theme.palette.secondary.light,\r\n    '&:hover':{\r\n      backgroundColor: theme.palette.secondary.main,\r\n    }\r\n  },\r\n  drawerDiv: {\r\n    height: '100vh',\r\n    // backgroundColor: theme.palette.primary.main,\r\n    overflow: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  drawerPaperMobile: {\r\n    width: '80%',\r\n  },\r\n  drawerPaper: {\r\n    width: '20rem',\r\n  },\r\n  paperAnchorLeftMobile: {\r\n    width: '80%',\r\n  },\r\n  paperAnchorLeft: {\r\n    width: '20rem',\r\n  },\r\n}));\r\n\r\nconst navLinks = [\r\n  ['Home', '/', <HomeIcon/>], \r\n  ['Create group', '/createGroup', <CreateIcon/>],\r\n  ['Join group', '/joinGroup', <AddIcon/>],\r\n];\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n\r\n  const { handleLoadGroups, groupsStatus, groups, groupsError } = props;\r\n  useEffect(() => {\r\n    handleLoadGroups();\r\n  }, []);\r\n\r\n  const location = useLocation();\r\n\r\n  const [selectedGroup, setSelectedGroup] = useState('');\r\n  const [selectedGroupID, setSelectedGroupID] = useState('');\r\n\r\n  useEffect(() => {\r\n    setSelectedGroup('');\r\n    setSelectedGroupID('');\r\n    groups.forEach(group => {\r\n      if (location.pathname.startsWith(`/groups/${group.groupID.S}`)) {\r\n        setSelectedGroup(group.groupName.S);\r\n        setSelectedGroupID(group.groupID.S);\r\n      }\r\n    });\r\n  }, [groups, location])\r\n  \r\n  // mobile\r\n  const isMobile = useCheckMobile();\r\n\r\n  // Scroll effects\r\n  useEffect(() => {\r\n    window.onscroll = () => {\r\n      scrollFunction()\r\n    }\r\n  });\r\n\r\n  const [navElevation, setNavElevation] = useState(0);\r\n\r\n  function scrollFunction() {\r\n    const scroll = document.body.scrollTop || document.documentElement.scrollTop;\r\n    if(scroll === 0) {\r\n      setNavElevation(0);\r\n    } else {\r\n      setNavElevation(4);\r\n    }\r\n  }\r\n\r\n\r\n  // Menu \r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  // render\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position='fixed' elevation={navElevation} className={isMobile || classes.appBar}>\r\n        <Toolbar>\r\n          {isMobile && <div>\r\n            <IconButton className={classes.navButton} onClick={() => setDrawerOpen(true)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </div>}\r\n          <div>\r\n            <Button component={RouterLink} to=\"/\" className={classes.logoButton}>\r\n              {/* <img src=\"http://usaco.org/current/images/usaco_logo.png\" alt=\"logo\" className={classes.logo} style={{\r\n                maxHeight: logoRatio*navHeight,\r\n                transition: navTransitionSpeed,\r\n              }}/> */}\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Chores\r\n              </Typography>\r\n            </Button>\r\n          </div>\r\n          <div style={{flexGrow: 1}}></div>\r\n          <div><Typography variant='h5'>{selectedGroup}</Typography></div>\r\n          <div style={{flexGrow: 1}}></div>\r\n          {/*isMobile || <div>\r\n            <Button variant='contained' color='secondary' className={classes.navButton} component={RouterLink} to={'/logout'}>\r\n              Logout\r\n            </Button>\r\n          </div> */ }\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer \r\n        variant={isMobile ? 'temporary' : 'permanent'}\r\n        anchor='left'\r\n        open={drawerOpen}\r\n        classes={{\r\n          paperAnchorLeft: isMobile ? classes.paperAnchorLeftMobile : classes.paperAnchorLeft,\r\n          paper: isMobile ? classes.drawerPaperMobile : classes.drawerPaper,\r\n        }}\r\n        style={{\r\n          width: isMobile ? '80%' : '20rem',\r\n          flexShrink: 0,\r\n        }}\r\n        onClose={() => setDrawerOpen(false)}\r\n      >\r\n        {isMobile || <Toolbar/>}\r\n        <div className={classes.drawerDiv}>\r\n          {/*isMobile && <Button\r\n            onClick={() => setDrawerOpen(false)}\r\n            className={classes.navButtonMobile}\r\n            style={{ height: `${Math.floor(100 / (navLinks.length + 2))}%`, maxHeight: 100 }}\r\n            onMouseEnter={handleHovering}\r\n            onMouseLeave={handleUnhovering}\r\n          >\r\n            <CloseIcon />\r\n          </Button>*/}\r\n          <List>\r\n            {navLinks.map((text, index) => (\r\n              <ListItem button key={`navlink-${index}`} component={RouterLink} to={text[1]}\r\n                onClick={() => setDrawerOpen(false)}\r\n                className={props.selected === text[1] ? classes.navButtonSelected : classes.navButton}\r\n              >\r\n                <ListItemIcon>{text[2]}</ListItemIcon>\r\n                <ListItemText primary={text[0]}/>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Divider/>\r\n          <List style={{overflow:'auto'}} subheader={\r\n            <ListSubheader disableSticky>\r\n              <Typography variant='h6' style={{marginTop: '1rem',marginBottom: '.5rem'}}>\r\n                Your groups\r\n              </Typography>\r\n            </ListSubheader>\r\n          }>\r\n            {groupsStatus === 1 && \r\n              <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item xs={3}>\r\n                  <CircularProgress/>\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n            {groupsStatus === 2 && \r\n              groups.map((group, index) => (\r\n                  <ListItem button \r\n                    key={`group-${group.groupID.S}`} \r\n                    component={RouterLink}\r\n                    onClick={() => setDrawerOpen(false)}\r\n                    to={`/groups/${group.groupID.S}`}\r\n                    className={selectedGroupID === group.groupID.S ? classes.navButtonSelected : classes.navButton}\r\n                  >\r\n                    <ListItemIcon><GroupIcon/></ListItemIcon>\r\n                    <ListItemText primary={group.groupName.S} secondary={group.groupID.S}></ListItemText>\r\n                  </ListItem>\r\n              ))\r\n            }\r\n            {groupsStatus === 3 && \r\n              <Typography variant='body1' style={{color: '#e57373'}}>Error: {groupsError}</Typography>\r\n            }\r\n          </List>\r\n          <div style={{flexGrow: 1}}></div>\r\n          <Divider/>\r\n          <List><ListItem button component={RouterLink} to={'/logout'}\r\n            onClick={() => setDrawerOpen(false)}\r\n            className={classes.navButton}\r\n          >\r\n            <ListItemIcon><ExitToAppIcon/></ListItemIcon>\r\n            <ListItemText primary='Logout'/>\r\n          </ListItem></List>\r\n        </div>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}","export default function parseJwt (token) {\r\n  var base64Url = token.split('.')[1];\r\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n  }).join(''));\r\n\r\n  return JSON.parse(jsonPayload);\r\n};","import parseJwt from './parseJwt';\r\n\r\nconst REFRESH_TOKEN = 'refreshToken';\r\nconst IDENTITY_ID = 'identityID';\r\n\r\nconst initialMemoryTokens = {\r\n  idToken: null,\r\n  accessToken: null,\r\n  exp: -1,\r\n};\r\n\r\nlet inMemoryTokens = initialMemoryTokens;\r\n\r\nexport function setTokens(idToken, accessToken) {\r\n  inMemoryTokens = {\r\n    idToken: idToken,\r\n    accessToken: accessToken,\r\n    exp: Math.min(parseJwt(idToken).exp, parseJwt(accessToken).exp),\r\n  };;\r\n}\r\n\r\nexport function getTokens() {\r\n  const curTime = Math.ceil(Date.now()/1000) + 3*60; // current time in seconds + 3 minutes\r\n\r\n  // invalid tokens\r\n  if (curTime >= inMemoryTokens.exp) {\r\n    inMemoryTokens = initialMemoryTokens;\r\n  }\r\n\r\n  return inMemoryTokens;\r\n}\r\n\r\nexport function setRefreshToken(token) {\r\n  localStorage.setItem(REFRESH_TOKEN, token);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(REFRESH_TOKEN);\r\n}\r\n\r\n// use for better security with IAM but who cares\r\n// export function setIdentityID(identityID) {\r\n//   localStorage.setItem(IDENTITY_ID, identityID);\r\n// }\r\n\r\n// export function getIdentityID() {\r\n//   return localStorage.getItem(IDENTITY_ID);\r\n// }\r\n\r\nexport function clearTokens() {\r\n  localStorage.removeItem(REFRESH_TOKEN);\r\n  localStorage.removeItem(IDENTITY_ID);\r\n  inMemoryTokens = initialMemoryTokens;\r\n}","import { InitiateAuthCommand, RevokeTokenCommand, SignUpCommand } from '@aws-sdk/client-cognito-identity-provider';\r\nimport { CognitoIdentityProviderClient } from \"@aws-sdk/client-cognito-identity-provider\";\r\nimport { fromCognitoIdentityPool } from '@aws-sdk/credential-provider-cognito-identity';\r\nimport { CognitoIdentityClient, GetIdCommand } from '@aws-sdk/client-cognito-identity';\r\n\r\nimport { clearTokens, getRefreshToken, getTokens, setRefreshToken, setTokens } from './tokens';\r\n\r\nexport const IDENTITY_POOL_ID = 'us-east-2:f1368add-2f4b-47fc-8b3c-8b65a1c909cb';\r\nexport const USER_POOL_ID = 'us-east-2_ZiUGD7hem';\r\nexport const REGION ='us-east-2';\r\nexport const COGNITO_ID = 'cognito-idp.'+REGION+'.amazonaws.com/'+USER_POOL_ID;\r\nconst COGNITO_CLIENT_ID = 'deg51c9v98amenr0il094snqc';\r\n\r\nconst cognitoClient = new CognitoIdentityProviderClient({\r\n  region: REGION,\r\n});\r\n\r\nlet authCognitoClient;\r\n\r\nexport async function login(username, password) {\r\n  try {\r\n    const response = await cognitoClient.send(new InitiateAuthCommand({\r\n      AuthFlow: 'USER_PASSWORD_AUTH',\r\n      ClientId: COGNITO_CLIENT_ID,\r\n      AuthParameters: {\r\n        USERNAME: username,\r\n        PASSWORD: password,\r\n      },\r\n    }));\r\n    \r\n    \r\n    authCognitoClient = new CognitoIdentityProviderClient({\r\n      region: REGION,\r\n      credentials: fromCognitoIdentityPool({\r\n        client: new CognitoIdentityClient({ region: REGION }),\r\n        identityPoolId: IDENTITY_POOL_ID,\r\n        logins: {\r\n          [COGNITO_ID]: response.AuthenticationResult.IdToken,\r\n        },\r\n        // userIdentifier: username,\r\n      }),\r\n    });\r\n\r\n    setTokens(response.AuthenticationResult.IdToken, response.AuthenticationResult.AccessToken);\r\n    setRefreshToken(response.AuthenticationResult.RefreshToken);\r\n\r\n    return {success: true, message: 'success', response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function register(username, password, name) {\r\n  try {\r\n    const response = await cognitoClient.send(new SignUpCommand({\r\n      ClientId: COGNITO_CLIENT_ID,\r\n      Username: username,\r\n      Password: password,\r\n      UserAttributes: [\r\n        {Name: 'name', Value: name},\r\n      ],\r\n      ClientMetadata: {\r\n        'secretKey': process.env.REACT_APP_AUTO_CONFIRM_KEY,\r\n      },\r\n    }));\r\n\r\n    // log in auto after regsistering? \r\n    // need to add user to dynamo table...\r\n    // admin user: create group, regular: add to group\r\n\r\n    return {success: true, message: 'success', response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function logout() {\r\n\r\n  if (!authCognitoClient) {\r\n    authCognitoClient = new CognitoIdentityProviderClient({\r\n      region: REGION,\r\n      credentials: fromCognitoIdentityPool({\r\n        client: new CognitoIdentityClient({ region: REGION }),\r\n        identityPoolId: IDENTITY_POOL_ID,\r\n        logins: {\r\n          [COGNITO_ID]: (await getValidTokens()).idToken,\r\n        },\r\n        // userIdentifier: username,\r\n      }),\r\n    });\r\n  }\r\n\r\n  const refreshToken = getRefreshToken();\r\n  if (!refreshToken) {\r\n    return {success: true, message: 'no tokens to revoke'};\r\n  }\r\n\r\n  clearTokens();\r\n\r\n  try {\r\n    const response = await authCognitoClient.send(new RevokeTokenCommand({\r\n      ClientId: COGNITO_CLIENT_ID,\r\n      Token: refreshToken,\r\n    }));\r\n\r\n    authCognitoClient = null;\r\n    \r\n    return {success: true, message: 'logged out succesfully', response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function getValidTokens() {\r\n  const curTokens = getTokens();\r\n\r\n  if (curTokens.idToken && curTokens.accessToken) {\r\n    return curTokens;\r\n  }\r\n\r\n  const result = await refreshTokens();\r\n\r\n  if (result.success) {\r\n    return getTokens();\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function refreshTokens() {\r\n  const refreshToken = getRefreshToken();\r\n  if (!refreshToken) {\r\n    return {success: false, message: 'no refresh token found.'};\r\n  }\r\n\r\n  try {\r\n    const response = await cognitoClient.send(new InitiateAuthCommand({\r\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\r\n      ClientId: COGNITO_CLIENT_ID,\r\n      AuthParameters: {\r\n        REFRESH_TOKEN: refreshToken,\r\n      },\r\n    }));\r\n\r\n    setTokens(response.AuthenticationResult.IdToken, response.AuthenticationResult.AccessToken);\r\n\r\n    return {success: true, message: 'success'};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n// export async function getValidIdentityID() {\r\n//   let identityID = getIdentityID();\r\n//   if (identityID) {\r\n//     return {success: true, identityID};\r\n//   }\r\n\r\n//   const tokens = await getValidTokens();\r\n\r\n//   if (!tokens) {\r\n//     return {success: false, message: 'no valid tokens'};\r\n//   }\r\n\r\n//   try {\r\n//     const identityClient = new CognitoIdentityClient({ region: REGION });\r\n\r\n//     const response = await identityClient.send(new GetIdCommand({\r\n//       IdentityPoolId: IDENTITY_POOL_ID,\r\n//       Logins: {\r\n//         [COGNITO_ID]: tokens.idToken,\r\n//       },\r\n//     }));\r\n\r\n//     setIdentityID(response.identityID);\r\n//     return {success: true, identityID: response.identityID};\r\n//   } catch (err) {\r\n//     return {success: false, message: err.message};\r\n//   }\r\n// }\r\n","import  { DynamoDB } from '@aws-sdk/client-dynamodb';\r\nimport { fromCognitoIdentityPool } from '@aws-sdk/credential-provider-cognito-identity';\r\nimport { CognitoIdentityClient } from '@aws-sdk/client-cognito-identity';\r\nimport { getValidTokens, IDENTITY_POOL_ID, COGNITO_ID, REGION } from './auth';\r\n\r\nlet dynamoClient;\r\n\r\nexport async function getNewDynamoClient() {\r\n  const tokens = await getValidTokens();\r\n  if (!tokens) {\r\n    return {success: false, message: 'no valid tokens'};\r\n  }\r\n\r\n  dynamoClient = new DynamoDB({\r\n    region: REGION, \r\n    credentials: fromCognitoIdentityPool({\r\n      client: new CognitoIdentityClient({ region: REGION }),\r\n      identityPoolId: IDENTITY_POOL_ID,\r\n      logins: {\r\n        [COGNITO_ID]: tokens.idToken,\r\n      },\r\n      // userIdentifier: username,\r\n    }),\r\n  });\r\n\r\n  return {success: true, dynamoClient, tokens};\r\n}","import  { PutItemCommand, GetItemCommand, UpdateItemCommand, QueryCommand } from '@aws-sdk/client-dynamodb';\r\nimport { getNewDynamoClient } from './dynamo';\r\nimport parseJwt from './parseJwt';\r\n\r\n\r\n// generates a group id using only numbers and upper case letters \r\n// 36^6 = 2*10^9 codes\r\nfunction generateGroupID() {\r\n  const length = 6;\r\n  let id = '';\r\n  for(let i = 0; i < length; i++) {\r\n    const dig = Math.floor(Math.random()*36);\r\n    let chr =''\r\n    if (dig < 10) {\r\n      chr = dig.toString();\r\n    } else {\r\n      chr = String.fromCharCode(dig - 10 + 65);\r\n    }\r\n    id = id.concat(chr);\r\n  }\r\n\r\n  return id;\r\n}\r\n\r\nexport async function generateValidGroupID(dynamoClient=null) {\r\n\r\n  if(!dynamoClient) {\r\n    const client = await getNewDynamoClient();\r\n    if (!client.success) {\r\n      return {success: false, message: client.message};\r\n    }\r\n\r\n    dynamoClient = client.dynamoClient;\r\n  }\r\n\r\n  let works = false;\r\n  let groupCode='';\r\n\r\n  const startTime = Date.now(); // cur time in ms\r\n\r\n  while(!works) {\r\n    // timeout after 5 secs\r\n    if (Date.now() - startTime > 5000){\r\n      return {success: false, message: 'timed out before valid id was found'};\r\n    }\r\n\r\n    groupCode = generateGroupID();\r\n    console.log('trying id:', groupCode);\r\n\r\n    try {\r\n      const getParams ={\r\n        TableName: 'chore-web-app-groups',\r\n        Key: {\r\n          groupID: {'S': groupCode},\r\n        },\r\n      }\r\n  \r\n      const response = await dynamoClient.send(new GetItemCommand(getParams));\r\n      \r\n      console.log(response);\r\n      if(response.Item) {\r\n        works = false;\r\n      } else {\r\n        works = true;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      return {success: false, message: err.message};\r\n    }\r\n  }\r\n\r\n  console.log('found valid id:', groupCode);\r\n  return {success: true, groupCode};\r\n}\r\n\r\n\r\nexport async function createGroup(groupName) {\r\n\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const groupID = await generateValidGroupID(dynamoClient);\r\n  if (!groupID.success) {\r\n    return {success: false, message: groupID.message};\r\n  }\r\n\r\n  const parsedToken = parseJwt(client.tokens.idToken);\r\n  const ownerName = parsedToken['name'];\r\n  const ownerID = parsedToken['cognito:username']\r\n\r\n  try {\r\n    const putGroupParams = {\r\n      TableName: 'chore-web-app-groups',\r\n      Item: {\r\n        'groupID': {S: groupID.groupCode},\r\n        'groupName': {S: groupName},\r\n        'numUsers': {N : '1'},\r\n        'ownerID': {S: ownerID},\r\n        'users': {SS: [ownerID]},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new PutItemCommand(putGroupParams));\r\n    \r\n    const putUserGroupParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      Item: {\r\n        'userID': {S: ownerID},\r\n        'groupID': {S: groupID.groupCode},\r\n        'userName': {S: ownerName},\r\n        'groupName': {S: groupName},\r\n        'role': {S: 'owner'},\r\n      },\r\n    };\r\n\r\n    const response2 = await dynamoClient.send(new PutItemCommand(putUserGroupParams));\r\n\r\n    return {success: true, response, response2};\r\n  } catch(err) {\r\n    console.log(err);\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function joinGroup(groupCode) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const parsedToken = parseJwt(client.tokens.idToken)\r\n  const userID = parsedToken['cognito:username'];\r\n  const userName = parsedToken['name'];\r\n\r\n  try {\r\n\r\n    const getGroupParams = {\r\n      TableName: 'chore-web-app-groups',\r\n      Key: {\r\n        groupID: {'S': groupCode},\r\n      },\r\n    }\r\n\r\n    const response = await dynamoClient.send(new GetItemCommand(getGroupParams));\r\n\r\n    if (!response.Item) {\r\n      return {success: false, message: 'Invalid group code'};\r\n    }\r\n\r\n    const updateGroupParams = {\r\n      TableName: 'chore-web-app-groups',\r\n      Key: {\r\n        groupID: {'S': groupCode},\r\n      },\r\n      ConditionExpression: 'attribute_exists(#u) AND NOT contains(#u, :userID)',\r\n      UpdateExpression: 'ADD #u :userIDSet, numUsers :one',\r\n      ExpressionAttributeNames: {\r\n        '#u':'users',\r\n      },\r\n      ExpressionAttributeValues: {\r\n        ':userID': {S: userID},\r\n        ':userIDSet': {SS: [userID]},\r\n        ':one': {N: '1'},\r\n      },\r\n    };\r\n\r\n    const response2 = await dynamoClient.send(new UpdateItemCommand(updateGroupParams));\r\n\r\n    const putUserGroupParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      Item: {\r\n        'userID': {S: userID},\r\n        'groupID': {S: groupCode},\r\n        'userName': {S: userName},\r\n        'groupName': {S: response.Item.groupName.S},\r\n        'role': {S: 'regular'},\r\n      },\r\n    };\r\n\r\n    const response3 = await dynamoClient.send(new PutItemCommand(putUserGroupParams));\r\n\r\n    return {success: true, response, response2, response3};\r\n  } catch (err) {\r\n    if(err.message === 'The conditional request failed') {\r\n      err.message = 'You are already in this group';\r\n    }\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function listGroups() {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      KeyConditionExpression: 'userID = :user',\r\n      ExpressionAttributeValues: {\r\n        ':user': {S: userID},\r\n      },\r\n    }\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n\r\n}\r\n\r\nexport async function listUsersInGroup(groupID){\r\n  if(!groupID) {\r\n    return {success: false, message: 'group id requried'};\r\n  }\r\n\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      IndexName: 'groupID-userID-index',\r\n      KeyConditionExpression: 'groupID = :group',\r\n      ExpressionAttributeValues: {\r\n        ':group': {S: groupID},\r\n      },\r\n    }\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}","import { useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport { getValidTokens } from '../utils/auth';\r\nimport { listGroups } from '../utils/groups';\r\n\r\nexport default function PrivateRoute({\r\n  component: Component, \r\n  selected, \r\n  ...rest\r\n}) {\r\n\r\n  const [authenticated, setAuthenticated] = useState(0); // 0 = awaiting, 1 = authenticated, -1 = failed\r\n\r\n  if(authenticated === 0) {\r\n    // Add your own authentication on the below line.\r\n    getValidTokens().then((result) => {\r\n      if (result) {\r\n        setAuthenticated(1);\r\n      } else {\r\n        setAuthenticated(-1);\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      setAuthenticated(-1);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  // groups\r\n  const [groups, setGroups] = useState([]);\r\n  const [groupsStatus, setGroupsStatus] = useState(0); // 0 = nothing, 1 = loading, 2 = success, 3 = error\r\n  const [groupsError, setGroupsError] = useState('');\r\n\r\n  async function handleLoadGroups() {\r\n    setGroupsStatus(1);\r\n    const result = await listGroups();\r\n    \r\n    // console.log(result);\r\n\r\n    if (result.success) {\r\n      setGroups(result.response.Items);\r\n      setGroupsStatus(2);\r\n    } else {\r\n      setGroupsStatus(3);\r\n      setGroupsError(result.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Route\r\n     {...rest} \r\n     render={props =>\r\n      (authenticated === 0) ? (\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: '100vh' }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <CircularProgress/>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        (authenticated === 1) ? (\r\n          <div style={{display: 'flex'}}>\r\n            <Header \r\n              selected={selected} \r\n              groups={groups}\r\n              groupsStatus={groupsStatus}\r\n              groupsError={groupsError}\r\n              handleLoadGroups={handleLoadGroups}\r\n            />\r\n            <main style={{flexGrow: 1, padding: '2rem'}}>\r\n              <Toolbar/>\r\n              <Component \r\n                {...props}\r\n                handleLoadGroups={handleLoadGroups}\r\n                groups={groups}\r\n                groupsStatus={groupsStatus}\r\n              />\r\n            </main>\r\n          </div>\r\n        ) : (\r\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        )\r\n      )\r\n    }/>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { getValidTokens } from '../utils/auth';\r\n\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  ...rest\r\n}) {\r\n\r\n  const [authenticated, setAuthenticated] = useState(0); // 0 = awaiting, 1 = authenticated, -1 = failed\r\n\r\n  if(authenticated === 0) {\r\n    // Add your own authentication on the below line.\r\n    getValidTokens().then((result) => {\r\n      if (result) {\r\n        setAuthenticated(1);\r\n      } else {\r\n        setAuthenticated(-1);\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      setAuthenticated(-1);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Route\r\n     {...rest} \r\n     render={props =>\r\n      (authenticated === 0) ? (\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: '100vh' }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <CircularProgress/>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        (authenticated === -1) ? (\r\n          <div>\r\n            <main>\r\n              <Component {...props}/>\r\n            </main>\r\n          </div>\r\n        ) : (\r\n          <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n        )\r\n      )\r\n    }/>\r\n  );\r\n}","import { v4 as uuidv4 } from 'uuid';\r\nimport  { PutItemCommand, GetItemCommand, UpdateItemCommand, QueryCommand } from '@aws-sdk/client-dynamodb';\r\n\r\nimport { getNewDynamoClient } from './dynamo';\r\nimport parseJwt from './parseJwt';\r\n\r\n// get all of a user's tasks. if no user provided, use current user\r\nexport async function listUserTasks(userID) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  if(!userID) {\r\n    userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n  }\r\n\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-tasks',\r\n      KeyConditionExpression: 'userID = :user',\r\n      ExpressionAttributeValues: {\r\n        ':user': {S: userID},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, response};\r\n  } catch(err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n// get all of a user's tasks in a specific group. if no user provided, use current user\r\nexport async function listUserGroupTasks(groupID, userID) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  if(!userID) {\r\n    userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n  }\r\n\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-tasks',\r\n      KeyConditionExpression: 'userID = :user AND begins_with(#g, :group)',\r\n      ExpressionAttributeValues: {\r\n        ':user': {S: userID},\r\n        ':group': {S: groupID},\r\n      },\r\n      ExpressionAttributeNames: {\r\n        '#g' : 'groupID#taskID',\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, response};\r\n  } catch(err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n// get all tasks in a group - use gsi\r\nexport async function listGroupTasks(groupID) {\r\n\r\n}\r\n\r\n// get all tasks in a group assigned to a specific user - use gsi\r\nexport async function listGroupUserTasks(groupID, userID) {\r\n\r\n}\r\n\r\n// create a new task with specified information\r\nexport async function createTask(groupID, userID, taskName, taskDescription, taskDays) {\r\n  if(!groupID || !userID || !taskName || !taskDays || taskDays.length === 0) {\r\n    return {success: false, message: 'missing required parameters'};\r\n  }\r\n  if(!taskDescription) {\r\n    taskDescription = '';\r\n  }\r\n\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const taskID = uuidv4();\r\n\r\n  try {\r\n    const putParams = {\r\n      TableName: 'chore-web-app-tasks',\r\n      Item: {\r\n        'groupID': {S: groupID},\r\n        'userID': {S: userID},\r\n        'taskName': {S: taskName},\r\n        'taskDescription': {S: taskDescription},\r\n        'taskDays': {SS: taskDays},\r\n        'groupID#taskID': {S: `${groupID}#${taskID}`},\r\n        'taskID': {S: taskID},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new PutItemCommand(putParams));\r\n\r\n    return {success: true, response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function deleteTask(userID, groupID, taskID) {\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, useParams, Link as RouterLink, useRouteMatch, Redirect } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { listUserTasks } from '../utils/tasks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  day: {\r\n    margin: 2,\r\n    color: '#bbb'\r\n  },\r\n  dayIncluded: {\r\n    margin: 2,\r\n    color: '#000',\r\n  },\r\n}));\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n  \r\n  // tasks\r\n  const [userTasks, setUserTasks] = useState(null);\r\n  const [userTasksStatus, setUserTasksStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  const [userTasksMessage, setUserTasksMessage] = useState('');\r\n  const days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ];\r\n\r\n  async function handleGetUserTasks() {\r\n    setUserTasksStatus(1);\r\n    const result = await listUserTasks();\r\n    console.log(result);\r\n\r\n    if(result.success) {\r\n      setUserTasks(result.response.Items);\r\n      setUserTasksStatus(2);\r\n    } else {\r\n      setUserTasksStatus(3);\r\n      setUserTasksMessage(result.message);\r\n    }\r\n  }\r\n  useEffect(() => handleGetUserTasks(), []);\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <IconButton disabled={userTasksStatus < 2} onClick={handleGetUserTasks}>\r\n          <RefreshIcon />\r\n        </IconButton>\r\n        <Typography variant='h6'>{userTasksStatus === 2 && userTasks && `${userTasks.length} tasks in group`}</Typography>\r\n      </div>\r\n      {userTasksStatus === 1 ?\r\n        <CircularProgress />\r\n        : (userTasksStatus === 2 && userTasks) ?\r\n          <List style={{ marginBottom: 30 }}>\r\n            {userTasks.length === 0 && 'You do not have any tasks at this time.'}\r\n            {userTasks.map((task, index) => (\r\n              <ListItem key={`user-task-${index}-${task.taskID.S}`} button component={RouterLink} to={`/groups/${task.groupID.S}/tasks/${task.taskID.S}`}>\r\n                <div style={{ display: 'flex', width: '100%', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                  <ListItemText\r\n                    primary={task.taskName.S}\r\n                    secondary={`${task.taskDescription.S.length > 47 ? `${task.taskDescription.S.substring(0, 47)}...` : task.taskDescription.S}`}\r\n                  // style={{overflow: 'hidden'}}\r\n                  />\r\n                  <div style={{ display: 'flex', justifyContent: 'flex-end', flexGrow: 1, marginLeft: 10 }}>\r\n                    {days.map((day) => {\r\n                      const included = task.taskDays.SS.includes(day);\r\n                      return (\r\n                        //task.taskDays.SS.includes(day) ? <Chip key={day} label={day} style={{margin: 2}} /> : null\r\n                        <div className={included ? classes.dayIncluded : classes.day}>{day[0]}</div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          :\r\n          <div>\r\n            <p>{userTasksMessage}</p>\r\n          </div>\r\n      }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1>about</h1>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// import logo from './images/kmlogo-transparent.png';\r\nexport default function Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href={props.link || \"https://madmobileapps.com\"}>\r\n        {props.name || \"MAD Mobile Apps\"}\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Copyright from './Copyright';\r\nimport { login } from '../utils/auth';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n      margin: theme.spacing(0, 0, 2),\r\n  },\r\n  buttonProgress: {\r\n    color: blue[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [loginStatus, setLoginStatus] = useState(0); // 0 = not submitted, 1 = loading, 2 = success, 3 = error\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  async function handleLogin(event) {\r\n    event.preventDefault();\r\n    setLoginStatus(1);\r\n    \r\n    const result = await login(username, password);\r\n\r\n    console.log(result);\r\n\r\n    // TODO: add error handling\r\n    if(result.success) {\r\n      setLoginStatus(2);\r\n      history.push('/');\r\n    } else {\r\n      setLoginStatus(3);\r\n      setErrorMessage(result.message);\r\n      // allow resubmission after 5 seconds\r\n      setTimeout(() => setLoginStatus(0), 5000);\r\n    }\r\n  }\r\n\r\n  function handleUsernameChange(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {/*TODO: fix logo */}\r\n        {/* <img alt=\"K&M Tax Document Upload\" src={logo}/> */}\r\n        <Typography component=\"h1\" variant=\"h4\" className={classes.title}>\r\n            Chore App\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Log In\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleLogin}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            type=\"username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            // error={emailError}\r\n            value={username}\r\n            onInput={handleUsernameChange}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onInput={handlePasswordChange}\r\n          />\r\n          <Collapse in={errorMessage}>\r\n            {/* <Alert severity=\"error\">{errorMessage}</Alert> */}\r\n            <Card style={{backgroundColor: '#e57373'}}>\r\n              <div style={{display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: 7}}>\r\n                <ErrorIcon/>\r\n                <div style={{marginLeft: 10, marginRight: 10}}>\r\n                  {errorMessage}\r\n                </div>\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton \r\n                  onClick={() => setErrorMessage('')}\r\n                  aria-label=\"close\"\r\n                  size=\"small\"\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\"/>\r\n                </IconButton>\r\n              </div>\r\n            </Card>\r\n          </Collapse>\r\n          <div className={classes.wrapper}>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loginStatus === 1 || loginStatus === 2}\r\n            >\r\n              {loginStatus === 1 ?\r\n              <CircularProgress size={24}/>\r\n              :  \"Login\"\r\n              }\r\n            </Button>\r\n          </div>\r\n          \r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/register\" variant=\"body2\">\r\n                Don't have an account? Register\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright name=\"MAD Mobile Apps\" link=\"https://madmobileapps.com\"/>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { logout } from '../utils/auth';\r\n\r\nexport default function Logout() {\r\n  const history = useHistory();\r\n  \r\n  const [logoutStatus, setLogoutStatus] = useState(0); // 0 = not clicked, 1 = loading, 2 = success, 3 = error\r\n\r\n  useEffect(() => {\r\n    handleLogout();\r\n  }, []);\r\n\r\n  async function handleLogout() {\r\n    setLogoutStatus(1);\r\n\r\n    const result = await logout();\r\n\r\n    console.log(result);\r\n\r\n    if (result.success) {\r\n      history.push('/login');\r\n    } else {\r\n      setLogoutStatus(3);\r\n      // error handling\r\n      console.log('error logging out');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ minHeight: '100vh' }}\r\n    >\r\n      <Grid item xs={3}>\r\n        {logoutStatus === 0 && \r\n          <Button onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        }\r\n        {logoutStatus === 1 &&\r\n          <CircularProgress/>\r\n        }\r\n        {logoutStatus === 2 &&\r\n          'Logout successful.'\r\n        }\r\n        {logoutStatus === 3 &&\r\n          <div>\r\n            Logout failed.\r\n            <br/>\r\n            <Button onClick={handleLogout}>\r\n              Try again\r\n            </Button>\r\n          </div>\r\n        }\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Radio from '@material-ui/core/Radio';\r\n// import RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Copyright from './Copyright';\r\nimport { register } from '../utils/auth';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // const [role, setRole] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // const [groupName, setGroupName] = useState('');\r\n  // const [groupCode, setGroupCode] = useState('');\r\n\r\n  const [registerStatus, setRegisterStatus] = useState(0); // 0 = not submitted, 1 = loading, 2 = success, 3 = error\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n\r\n  // TODO: rework so that all group CRUD is after auth. (multiple group)\r\n  // remove extra options (parent, child, code, etc.)\r\n  // auth immediately after register\r\n\r\n  async function handleRegister(event) {\r\n    event.preventDefault();\r\n    setRegisterStatus(1);\r\n    \r\n    const result = await register(username, password, name);\r\n\r\n    if (result.success) {\r\n      setRegisterStatus(2);\r\n      // auto login?\r\n      // history.push('/login');\r\n      setResponseMessage('Registered successfully!');\r\n    } else {\r\n      setRegisterStatus(3);\r\n      setResponseMessage(result.message);\r\n    }\r\n  }\r\n\r\n  // function handleRoleChange(event) {\r\n  //   setRole(event.target.value);\r\n  // }\r\n  function handleUsernameChange(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n  // function handleGroupNameChange(event) {\r\n  //   setGroupName(event.target.value);\r\n  // }\r\n  // function handleGroupCodeChange(event) {\r\n  //   setGroupCode(event.target.value);\r\n  // }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {/*TODO: fix logo */}\r\n        {/* <img alt=\"K&M Tax Document Upload\" src={logo}/> */}\r\n        <Typography component=\"h1\" variant=\"h4\" className={classes.title}>\r\n            Chore App\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <div style={{height:10}}/>\r\n        <form className={classes.form} onSubmit={handleRegister}>\r\n          {/* <RadioGroup \r\n            row \r\n            style={{alignItems:'center', justifyContent: 'center'}} \r\n            name='role' \r\n            value={role} \r\n            onChange={handleRoleChange}\r\n          >\r\n            <Typography style={{marginRight: 3}} variant='h6'>I am a:</Typography>\r\n            <FormControlLabel \r\n              style={{margin: 0}}\r\n              value=\"parent\"\r\n              control={<Radio required disabled={loginStatus === 1 || loginStatus === 2}/>}\r\n              label=\"Parent\"\r\n            />\r\n            <FormControlLabel\r\n              style={{margin: 0}} \r\n              value=\"child\" \r\n              control={<Radio required disabled={loginStatus === 1 || loginStatus === 2}/>} \r\n              label=\"Child\"\r\n            />\r\n          </RadioGroup> */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            type=\"username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            // error={emailError}\r\n            value={username}\r\n            onInput={handleUsernameChange}\r\n            autoFocus\r\n            disabled={registerStatus === 1 || registerStatus === 2}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            // error={emailError}\r\n            value={name}\r\n            onInput={handleNameChange}\r\n            disabled={registerStatus === 1 || registerStatus === 2}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onInput={handlePasswordChange}\r\n            disabled={registerStatus === 1 || registerStatus === 2}\r\n          />\r\n          {/* <Collapse in={role==='parent'}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required={role==='parent'}\r\n              fullWidth\r\n              name='groupName'\r\n              label='Family name'\r\n              type='text'\r\n              id='groupName'\r\n              autoComplete='groupName'\r\n              value={groupName}\r\n              onInput={handleGroupNameChange}\r\n              disabled={registerStatus === 1 || registerStatus === 2}\r\n            /> \r\n          </Collapse>\r\n          <Collapse in={role==='child'}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required={role==='child'}\r\n              fullWidth\r\n              name='groupCode'\r\n              label='Family code'\r\n              type='text'\r\n              id='groupCode'\r\n              autoComplete='groupCode'\r\n              value={groupCode}\r\n              onInput={handleGroupCodeChange}\r\n              disabled={registerStatus === 1 || registerStatus === 2}\r\n            /> \r\n          </Collapse> */}\r\n          <Collapse in={responseMessage}>\r\n            {/* <Alert severity=\"error\">{errorMessage}</Alert> */}\r\n            <Card style={{\r\n              backgroundColor: ['','','#81c784','#e57373'][registerStatus],\r\n            }}>\r\n              <div style={{display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: 7}}>\r\n                {[null,<HourglassEmptyIcon/>,<DoneIcon/>,<ErrorIcon/>][registerStatus]}\r\n                <div style={{marginLeft: 10, marginRight: 10}}>\r\n                  {responseMessage}\r\n                </div>\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton \r\n                  onClick={() => setResponseMessage('')}\r\n                  aria-label=\"close\"\r\n                  size=\"small\"\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\"/>\r\n                </IconButton>\r\n              </div>\r\n            </Card>\r\n          </Collapse>\r\n          <div className={classes.wrapper}>\r\n            <Collapse in={registerStatus===2}>\r\n              <Button\r\n                fullWidth\r\n                variant='outlined'\r\n                style={{backgroundColor: '#81c784', marginBottom: 5}}\r\n                component={RouterLink}\r\n                to='/login'\r\n              >\r\n                Go to Log in\r\n              </Button>\r\n            </Collapse>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={registerStatus === 1 || registerStatus === 2}\r\n            >\r\n              {registerStatus === 1 ?\r\n              <CircularProgress size={24}/>\r\n              :  \"Register\"\r\n              }\r\n            </Button>\r\n          </div>\r\n          \r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/login\" variant=\"body2\">\r\n                Already have an account? Log in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright name=\"MAD Mobile Apps\" link=\"https://madmobileapps.com\"/>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { createGroup } from \"../utils/groups\";\r\n\r\nexport default function CreateGroup(props) {\r\n  \r\n  const [groupName, setGroupName] = useState('');\r\n\r\n  function handleGroupNameChange(event) {\r\n    setGroupName(event.target.value);\r\n  }\r\n  \r\n  async function handleCreateGroup(event){\r\n    event.preventDefault();\r\n\r\n    const result = await createGroup(groupName);\r\n    // console.log(result);\r\n    props.handleLoadGroups();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleCreateGroup}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          id=\"groupName\"\r\n          label=\"Group name\"\r\n          type=\"groupName\"\r\n          name=\"groupName\"\r\n          autoComplete=\"groupName\"\r\n          // error={emailError}\r\n          value={groupName}\r\n          onInput={handleGroupNameChange}\r\n          autoFocus\r\n        />\r\n        <br/>\r\n        <Button variant='contained' disableElevation color='secondary' type='submit'>Create group</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { joinGroup } from \"../utils/groups\";\r\n\r\nexport default function JoinGroup(props) {\r\n  \r\n  const [groupCode, setGroupCode] = useState('');\r\n\r\n  function handleGroupCodeChange(event) {\r\n    setGroupCode(event.target.value.toUpperCase());\r\n  }\r\n  \r\n  async function handleJoinGroup(event){\r\n    event.preventDefault();\r\n\r\n    const result = await joinGroup(groupCode);\r\n    console.log(result);\r\n    props.handleLoadGroups();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleJoinGroup}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          id=\"groupCode\"\r\n          label=\"Group code\"\r\n          type=\"groupCode\"\r\n          name=\"groupCode\"\r\n          autoComplete=\"groupCode\"\r\n          // error={emailError}\r\n          value={groupCode}\r\n          onInput={handleGroupCodeChange}\r\n          autoFocus\r\n        />\r\n        <br/>\r\n        <Button variant='contained' disableElevation color='secondary' type='submit'>Join group</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, useParams, Link as RouterLink, useRouteMatch, Redirect } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { createTask } from \"../utils/tasks\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) =>  ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: 'rgb(0,0,0,.7)',\r\n  },\r\n  closeButton: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: '#111',\r\n    width: 36,\r\n    height: 36,\r\n    '&:hover': {\r\n      backgroundColor: '#f55',\r\n      color: '#fff'\r\n    }\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  formControl: {\r\n    minWidth: '10rem',\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n\r\n\r\nexport default function Tasks(props) {\r\n  const { group, groupUsers } = props;\r\n  const classes = useStyles();\r\n  const { path, url } = useRouteMatch();\r\n\r\n  // create task\r\n  const [showCreateTask, setShowCreateTask] = useState(false);\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n  const days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\n  const [selectedDays, setSelectedDays] = useState([])\r\n  const [assignedUser, setAssignedUser] = useState('');\r\n\r\n  function handleCloseCreateTask() {\r\n    setShowCreateTask(false);\r\n  }\r\n\r\n  const [createTaskStatus, setCreateTaskStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  const [createTaskMessage, setCreateTaskMessage] = useState(''); \r\n\r\n  async function handleCreateTask(event) {\r\n    event.preventDefault();\r\n    setCreateTaskStatus(1);\r\n\r\n    const result = await createTask(group.groupID.S, assignedUser, taskName, taskDescription, selectedDays);\r\n    console.log(result);\r\n\r\n    if(result.success) {\r\n      setCreateTaskStatus(2);\r\n      setCreateTaskMessage('Task created successfully!');\r\n    } else {\r\n      setCreateTaskStatus(3);\r\n      setCreateTaskMessage(result.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    group && group.role.S === 'owner' ?\r\n    <Switch>\r\n      <Route exact path={path}>\r\n        <h3>select a task</h3>\r\n        <button onClick={()=>setShowCreateTask(true)}>create task</button>\r\n        <List>\r\n\r\n        </List>\r\n        \r\n        <Dialog\r\n          className={classes.backdrop}\r\n          key={'create-task-modal'}\r\n          open={showCreateTask}\r\n          style={{overflow: 'auto'}} \r\n          maxWidth='md'\r\n          fullWidth\r\n          onClose={handleCloseCreateTask}\r\n        >\r\n          <div style={{backgroundColor:'#eee', padding: 40}} >\r\n            <div style={{position: 'relative', float: 'right', top: -20, right: -20,}} onClick={handleCloseCreateTask}>\r\n              <IconButton className={classes.closeButton}>\r\n                <CloseIcon/>\r\n              </IconButton>\r\n            </div>\r\n            <Typography variant='h5'>Create task</Typography>\r\n            <form onSubmit={handleCreateTask}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                id=\"taskName\"\r\n                label=\"Task name\"\r\n                type=\"text\"\r\n                name=\"taskName\"\r\n                // error={emailError}\r\n                value={taskName}\r\n                onInput={(e) => {setTaskName(e.target.value);}}\r\n                disabled={createTaskStatus===1}\r\n              />\r\n              <br/>\r\n              <TextField\r\n                multiline\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                id=\"taskDescription\"\r\n                label=\"Task description\"\r\n                type=\"text\"\r\n                name=\"taskDescription\"\r\n                // error={emailError}\r\n                value={taskDescription}\r\n                onInput={(e) => {setTaskDescription(e.target.value);}}\r\n                style={{width: '90%', maxWidth: 500}}\r\n                disabled={createTaskStatus===1}\r\n              />\r\n              <br/>\r\n              <FormControl required className={classes.formControl} disabled={createTaskStatus===1}>\r\n                <InputLabel id=\"demo-mutiple-chip-label\">Days due</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-mutiple-chip-label\"\r\n                  id=\"demo-mutiple-chip\"\r\n                  multiple\r\n                  value={selectedDays}\r\n                  onChange={(e) => {setSelectedDays(e.target.value);}}\r\n                  input={<Input id=\"select-multiple-chip\" />}\r\n                  renderValue={(selected) => (\r\n                    <div className={classes.chips}>\r\n                      {days.map((value) => (\r\n                        selected.includes(value) && <Chip key={value} label={value} className={classes.chip} />\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  MenuProps={{ onExited: () => {\r\n                    document.activeElement.blur();\r\n                  }}}\r\n                  // MenuProps={MenuProps}\r\n                >\r\n                  {days.map((day) => (\r\n                    <MenuItem key={`day-${day}`} value={day}>\r\n                      <Checkbox checked={selectedDays.includes(day)} />\r\n                      <ListItemText primary={day}/>\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <br/>\r\n              <FormControl required className={classes.formControl} disabled={createTaskStatus===1}>\r\n                <InputLabel id=\"demo-simple-select-label\">Assigned user</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={assignedUser}\r\n                  onChange={(e) => setAssignedUser(e.target.value)}\r\n                  MenuProps={{ onExited: () => {\r\n                    document.activeElement.blur();\r\n                  }}}\r\n                >\r\n                  {groupUsers && groupUsers.map((user) => (\r\n                    <MenuItem value={user.userID.S} key={`group-user-${user.userID.S}`}>{user.userName.S}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <br/>\r\n              <br/>\r\n              <Button style={{width: 150}} variant='contained' color='secondary' type='submit' disableElevation disabled={createTaskStatus===1}>\r\n                {createTaskStatus === 1 ? <CircularProgress size={24}/> : 'Create task'}\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        </Dialog>\r\n      </Route>\r\n      <Route path={`${path}/:taskID`}>\r\n        <Task group={group}/>\r\n      </Route>\r\n    </Switch>\r\n    : <Redirect to='/groups'/>\r\n  );\r\n} \r\n\r\n\r\nfunction Task(props) {\r\n  const { group } = props;\r\n  const { taskID } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <p>{taskID}</p>\r\n      <p>{group.groupID.S}</p>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, useParams, Link as RouterLink, useLocation, Redirect } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport Tasks from './Tasks';\r\n\r\nimport { listUsersInGroup } from \"../utils/groups\";\r\nimport useCheckMobile from \"../utils/useCheckMobile\";\r\nimport { listUserGroupTasks } from \"../utils/tasks\";\r\n\r\nexport default function Groups(props) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/groups'>\r\n        <h3>Please select a group from the side menu.</h3>\r\n      </Route>\r\n      <Route path='/groups/:groupID'>\r\n        <Group {...props} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nconst bottomNavLinks = [\r\n  {\r\n    path: '',\r\n    label: 'My tasks',\r\n    icon: <AssignmentIcon/>,\r\n    adminOnly: false,\r\n  },\r\n  {\r\n    path: '/users',\r\n    label: 'Users',\r\n    icon: <GroupIcon/>,\r\n    adminOnly: false,\r\n  },\r\n  {\r\n    path: '/info',\r\n    label: 'Info',\r\n    icon: <InfoIcon/>,\r\n    adminOnly: false,\r\n  },\r\n  {\r\n    path: '/tasks',\r\n    label: 'Manage tasks',\r\n    icon: <AssignmentIcon/>,\r\n    adminOnly: true,\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  day: {\r\n    margin: 2,\r\n    color: '#bbb'\r\n  },\r\n  dayIncluded: {\r\n    margin: 2,\r\n    color: '#000',\r\n  },\r\n}));\r\n\r\nfunction Group(props) {\r\n  const { groupID } = useParams();\r\n  const isMobile = useCheckMobile();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n\r\n  const { groups, groupsStatus } = props;\r\n\r\n  // navigation\r\n  const [navigation, setNavigation] = useState(0);\r\n  useEffect(() => {\r\n    bottomNavLinks.forEach((val, index) => {\r\n      if(location.pathname === `/groups/${groupID}${val.path}`) {\r\n        setNavigation(index);\r\n      }\r\n    });\r\n  }, [groupID, location]);\r\n\r\n  const [group, setGroup] = useState(null);\r\n  const [groupAuth, setGroupAuth] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  const [groupAuthMessage, setGroupAuthMessage] = useState('');\r\n\r\n  useEffect(checkGroups, [groupID, groupsStatus, groups]);\r\n\r\n\r\n  function checkGroups() {\r\n    // console.log(groupID);\r\n    // console.log(groups);\r\n    setGroupAuth(0);\r\n    if (groupsStatus === 1) {\r\n      setGroupAuth(1);\r\n      setGroup(null);\r\n      return;\r\n    }\r\n\r\n    if(groupsStatus !== 2) {\r\n      setGroupAuth(3);\r\n      setGroupAuthMessage('Groups not loaded. Try again later.');\r\n      setGroup(null);\r\n      return;\r\n    }\r\n\r\n    for(let i = 0; i < groups.length; i++) {\r\n      if (groups[i].groupID.S === groupID) {\r\n        setGroupAuth(2);\r\n        setGroup(groups[i]);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setGroupAuth(3);\r\n    setGroupAuthMessage('You do not have access to this group.');\r\n    setGroup(null);\r\n  }\r\n\r\n\r\n  // tasks\r\n  const [userTasks, setUserTasks] = useState(null);\r\n  const [userTasksStatus, setUserTasksStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  const [userTasksMessage, setUserTasksMessage] = useState('');\r\n  const days = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday'\r\n  ];\r\n\r\n  async function handleGetUserTasks() {\r\n    setUserTasksStatus(1);\r\n    const result = await listUserGroupTasks(group.groupID.S);\r\n    console.log(result);\r\n\r\n    if(result.success) {\r\n      setUserTasks(result.response.Items);\r\n      setUserTasksStatus(2);\r\n    } else {\r\n      setUserTasksStatus(3);\r\n      setUserTasksMessage(result.message);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (group && groupAuth === 2) {\r\n      handleGetUserTasks();\r\n    }\r\n  }, [group]);\r\n\r\n\r\n  // users\r\n  const [groupUsers, setGroupUsers] = useState(null);\r\n  const [groupUsersStatus, setGroupUsersStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  const [groupUsersMessage, setGroupUsersMessage] = useState('');\r\n\r\n  async function handleGetGroupUsers() {\r\n    setGroupUsersStatus(1);\r\n    const result = await listUsersInGroup(group.groupID.S);\r\n    console.log(result);\r\n\r\n    if (result.success) {\r\n      setGroupUsers(result.response.Items);\r\n      setGroupUsersStatus(2);\r\n    } else {\r\n      setGroupUsersStatus(3);\r\n      setGroupUsersMessage(result.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (group && groupAuth === 2 && !groupUsers) {\r\n      handleGetGroupUsers();\r\n    }\r\n  }, [group]);\r\n  // useEffect(() => {\r\n  //   if (group && groupAuth === 2 && bottomNavLinks[navigation].path === '/users' && !groupUsers) {\r\n  //     handleGetGroupUsers();\r\n  //   }\r\n  // }, [group, navigation]);\r\n\r\n  return (\r\n    groupAuth === 1 ? (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: '100vh' }}\r\n      >\r\n        <Grid item xs={3}>\r\n          <CircularProgress/>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n    : groupAuth === 2 ? (\r\n      <div>\r\n        <Switch>\r\n          <Route exact path={`/groups/${groupID}`}>\r\n            <div style={{display: 'flex', alignItems: 'center'}}>\r\n              <IconButton disabled={userTasksStatus < 2} onClick={handleGetUserTasks}>\r\n                <RefreshIcon/>\r\n              </IconButton>\r\n              <Typography variant='h6'>{userTasksStatus === 2 && userTasks && `${userTasks.length} tasks in group`}</Typography>\r\n            </div>\r\n            {userTasksStatus === 1 ? \r\n              <CircularProgress/>\r\n              : (userTasksStatus === 2 && userTasks) ?\r\n              <List style={{marginBottom: 30}}>\r\n                {userTasks.length === 0 && 'You do not have any tasks at this time.'}\r\n                {userTasks.map((task, index) => (\r\n                  <ListItem key={`user-task-${index}-${task.taskID.S}`} button component={RouterLink} to={`/groups/${groupID}/tasks/${task.taskID.S}`}>\r\n                    <div style={{display: 'flex', width: '100%', alignItems:'center', justifyContent: 'space-between'}}>\r\n                      <ListItemText \r\n                        primary={task.taskName.S}\r\n                        secondary={`${task.taskDescription.S.length > 47 ? `${task.taskDescription.S.substring(0, 47)}...` : task.taskDescription.S}`}\r\n                        // style={{overflow: 'hidden'}}\r\n                      />\r\n                      <div style={{display: 'flex', justifyContent: 'flex-end', flexGrow: 1, marginLeft: 10}}>  \r\n                        {days.map((day) => {\r\n                          const included = task.taskDays.SS.includes(day);\r\n                          return (\r\n                          //task.taskDays.SS.includes(day) ? <Chip key={day} label={day} style={{margin: 2}} /> : null\r\n                            <div className={included ? classes.dayIncluded : classes.day}>{day[0]}</div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              : \r\n              <div>\r\n                <p>{userTasksMessage}</p>\r\n              </div>\r\n            }\r\n          </Route>\r\n          <Route exact path={`/groups/${groupID}/info`}>\r\n            <div>\r\n              <h3>{group.groupName.S}</h3>\r\n              <p>Group code: {group.groupID.S}</p>\r\n              <p>Your role: {group.role.S}</p>\r\n            </div>\r\n          </Route>\r\n          <Route exact path={`/groups/${groupID}/users`}>\r\n            <div style={{display: 'flex', alignItems: 'center'}}>\r\n              <IconButton disabled={groupUsersStatus < 2} onClick={handleGetGroupUsers}>\r\n                <RefreshIcon/>\r\n              </IconButton>\r\n              <Typography variant='h6'>{groupUsersStatus === 2 && groupUsers && `${groupUsers.length} users in group`}</Typography>\r\n            </div>\r\n            {groupUsersStatus === 1 ? \r\n              <CircularProgress/>\r\n              : groupUsersStatus === 2 && groupUsers ?\r\n              <List>\r\n                {groupUsers.map((user, index) => (\r\n                  <ListItem key={`group-user-${index}-${user.userID.S}`}>\r\n                    <ListItemText primary={user.userName.S} secondary={user.userID.S}></ListItemText>\r\n                    <ListItemText secondary={user.role.S}></ListItemText>\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton>\r\n                        <DeleteIcon/>\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              : \r\n              <div>\r\n                {groupUsersMessage}\r\n              </div>\r\n            }\r\n          </Route>\r\n          <Route path={`/groups/${groupID}/tasks`}>\r\n            <Tasks group={group} groupUsers={groupUsers}/>\r\n          </Route>\r\n          <Route render={() => <Redirect to={`/groups/${groupID}`}/>}/>\r\n        </Switch>\r\n        <BottomNavigation \r\n          showLabels\r\n          value={navigation}\r\n          onChange={(event, newValue) => {\r\n            // setNavigation(newValue);\r\n          }}\r\n          style={{\r\n            width: '100%',\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            left: isMobile ? 0 : '10rem',\r\n            right: 0,\r\n            backgroundColor: '#e0e0e0'\r\n          }}\r\n        >\r\n          {bottomNavLinks.map((nav, index) => (\r\n            <BottomNavigationAction \r\n              key={`bottom-nav-${index}`}\r\n              label={nav.label}\r\n              icon={nav.icon}\r\n              component={RouterLink}\r\n              to={`/groups/${groupID}${nav.path}`}\r\n              style={{textDecoration: 'none'}}\r\n            />\r\n          ))}\r\n        </BottomNavigation>\r\n      </div>\r\n    )\r\n    : (\r\n      <div>\r\n        <h3>{groupAuthMessage}</h3>\r\n      </div>\r\n    )\r\n  );\r\n}","import PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport Register from './components/Register';\nimport CreateGroup from './components/CreateGroup';\nimport JoinGroup from './components/JoinGroup';\nimport Group from './components/Groups';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#ffa726',\n      },\n      secondary: {\n        main: '#ce93d8',\n        // main: '#f55',\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter basename='/'>\n        <Switch>\n          <PrivateRoute path='/' exact component={Home} selected='/'/>\n          <PrivateRoute path='/about' exact component={About} selected='/about'/>\n          <PrivateRoute path='/logout' exact component={Logout} />\n          <PrivateRoute path='/createGroup' exact component={CreateGroup} selected='/createGroup'/>\n          <PrivateRoute path='/joinGroup' exact component={JoinGroup} selected='/joinGroup'/>\n          <PrivateRoute path='/groups' component={Group} selected='/groups'/>\n          <PublicRoute path='/login' exact component={Login} />\n          <PublicRoute path='/register' exact component={Register} />\n          <Route render={() => <Redirect to=\"/\" />}/>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}