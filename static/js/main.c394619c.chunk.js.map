{"version":3,"sources":["utils/useCheckMobile.js","components/Header.jsx","utils/parseJwt.js","utils/tokens.js","utils/auth.js","utils/dynamo.js","utils/tasks.js","utils/groups.js","utils/useApi.js","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/SnackbarAlert.jsx","components/Home.jsx","components/About.jsx","components/Copyright.jsx","components/Login.jsx","components/Logout.jsx","components/Register.jsx","components/CreateGroup.jsx","components/JoinGroup.jsx","components/Tasks.jsx","components/Groups.jsx","App.js","reportWebVitals.js","index.js"],"names":["useCheckMobile","useState","windowDimension","setWindowDimension","useEffect","window","innerWidth","handleResize","addEventListener","removeEventListener","useStyles","makeStyles","theme","appBar","zIndex","drawer","title","margin","spacing","textTransform","textAlign","color","logoButton","padding","navButton","width","backgroundColor","navButtonSelected","palette","secondary","light","main","drawerDiv","height","overflow","display","flexDirection","drawerPaperMobile","drawerPaper","paperAnchorLeftMobile","paperAnchorLeft","navLinks","Header","props","classes","handleLoadGroups","groupsStatus","groups","groupsError","location","useLocation","selectedGroup","setSelectedGroup","selectedGroupID","setSelectedGroupID","forEach","group","pathname","startsWith","groupID","S","groupName","isMobile","onscroll","document","body","scrollTop","documentElement","setNavElevation","navElevation","drawerOpen","setDrawerOpen","Fragment","AppBar","position","elevation","className","Toolbar","IconButton","onClick","Button","component","RouterLink","to","Typography","variant","style","flexGrow","Drawer","anchor","open","paper","flexShrink","onClose","List","map","text","index","ListItem","button","selected","ListItemIcon","ListItemText","primary","Divider","ListSubheader","disableSticky","marginTop","marginBottom","Grid","container","direction","alignItems","justify","item","xs","CircularProgress","length","parseJwt","token","base64","split","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","JSON","parse","REFRESH_TOKEN","initialMemoryTokens","idToken","accessToken","exp","inMemoryTokens","setTokens","Math","min","getTokens","ceil","Date","now","setRefreshToken","localStorage","setItem","getRefreshToken","getItem","clearTokens","removeItem","authCognitoClient","IDENTITY_POOL_ID","REGION","COGNITO_ID","COGNITO_CLIENT_ID","cognitoClient","CognitoIdentityProviderClient","region","login","username","password","a","send","InitiateAuthCommand","AuthFlow","ClientId","AuthParameters","USERNAME","PASSWORD","response","credentials","fromCognitoIdentityPool","client","CognitoIdentityClient","identityPoolId","logins","AuthenticationResult","IdToken","AccessToken","RefreshToken","success","message","register","name","SignUpCommand","Username","Password","UserAttributes","Name","Value","ClientMetadata","process","logout","getValidTokens","refreshToken","RevokeTokenCommand","Token","curTokens","refreshTokens","dynamoClient","getNewDynamoClient","tokens","DynamoDB","listUserTasks","userID","queryParams","TableName","KeyConditionExpression","ExpressionAttributeValues","QueryCommand","Items","listUserGroupTasks","ExpressionAttributeNames","listGroupTasks","role","IndexName","createTask","user","taskName","taskDescription","taskDays","userName","taskID","uuidv4","putParams","Item","SS","PutItemCommand","getTask","Count","getParams","Key","GetItemCommand","deleteTask","deleteParams","DeleteItemCommand","generateGroupID","id","i","dig","floor","random","chr","String","fromCharCode","concat","generateValidGroupID","works","groupCode","startTime","console","log","createGroup","parsedToken","ownerName","ownerID","putGroupParams","N","putUserGroupParams","response2","joinGroup","getGroupParams","updateGroupParams","ConditionExpression","UpdateExpression","UpdateItemCommand","response3","listGroups","listUsersInGroup","removeUserFromGroup","getTasks","tasks","taskResponses","task","deleteTaskParams","taskResponse","push","deleteGroup","deleteGroupParams","ReturnValues","users","Attributes","userResponses","deleteUserGroupParams","userResponse","useApi","apiFunction","getApiParams","preCall","postCall","onSuccess","onFail","apiResult","setApiResult","apiStatus","setApiStatus","apiMessage","setApiMessage","handleCallApi","preParams","postParams","result","PrivateRoute","Component","rest","authenticated","setAuthenticated","then","catch","err","render","minHeight","state","from","PublicRoute","error","default","SnackbarAlert","setMessage","status","Snackbar","Card","justifyContent","marginLeft","marginRight","size","fontSize","day","dayIncluded","days","Home","handleGetUserTasks","userTasks","userTasksStatus","userTasksMessage","setUserTasksMessage","disabled","borderWidth","borderColor","borderStyle","borderRadius","substring","overflowWrap","included","includes","About","Copyright","align","Link","href","link","getFullYear","wrapper","avatar","form","buttonProgress","blue","top","left","Login","history","useHistory","setUsername","setPassword","handleLogin","loginStatus","errorMessage","setErrorMessage","Container","maxWidth","CssBaseline","Avatar","onSubmit","e","preventDefault","TextField","required","fullWidth","label","type","autoComplete","value","onInput","event","target","autoFocus","Collapse","in","Box","mt","Logout","logoutStatus","setLogoutStatus","handleLogout","Register","setName","handleRegister","registerStatus","responseMessage","setResponseMessage","CreateGroup","setGroupName","handleCreateGroup","createGroupStatus","createGroupMessage","setCreateGroupMessage","disableElevation","JoinGroup","setGroupCode","handleJoinGroup","joinGroupStatus","joinGroupMessage","setJoinGroupMessage","toUpperCase","backdrop","closeButton","chips","flexWrap","chip","formControl","minWidth","formControl2","Tasks","groupUsers","useRouteMatch","path","url","filterUser","setFilterUser","handleGetTasks","tasksStatus","tasksMessage","showCreateTask","setShowCreateTask","setTaskName","setTaskDescription","selectedDays","setSelectedDays","assignedUser","setAssignedUser","handleCloseCreateTask","handleCreateTask","createTaskStatus","createTaskMessage","setCreateTaskMessage","deleteTaskID","setDeleteTaskID","handleDeleteTask","deleteTaskStatus","deleteTaskMessage","setDeleteTaskMessage","exact","paddingLeft","paddingRight","FormControl","InputLabel","Select","labelId","onChange","MenuProps","onExited","activeElement","blur","MenuItem","ListItemSecondaryAction","edge","Dialog","float","right","multiline","multiple","input","Input","renderValue","Chip","Checkbox","checked","Task","useParams","handleGetTask","taskStatus","taskMessage","Groups","bottomNavLinks","icon","adminOnly","Group","navigation","setNavigation","val","setGroup","groupAuth","setGroupAuth","groupAuthMessage","setGroupAuthMessage","handleGetGroupUsers","groupUsersStatus","groupUsersMessage","deleteUserID","setDeleteUserID","handleRemoveUser","deleteUserStatus","handleDeleteGroup","BottomNavigation","showLabels","newValue","bottom","nav","BottomNavigationAction","textDecoration","App","createMuiTheme","ThemeProvider","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c394619c.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst mobileThreshold = 800;\r\n\r\nexport default function useCheckMobile() {\r\n  const [windowDimension, setWindowDimension] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setWindowDimension(window.innerWidth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimension(window.innerWidth);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  const isMobile = windowDimension <= mobileThreshold;\r\n  return isMobile;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {Link as RouterLink, useLocation } from \"react-router-dom\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport useCheckMobile from '../utils/useCheckMobile';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  title: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    textTransform: \"none\",\r\n    textAlign: \"left\",\r\n    color: '#333',\r\n  },\r\n  logoButton: {\r\n    padding: theme.spacing(0),\r\n    textAlign: \"left\",\r\n  },\r\n  navButton: {\r\n    color: '#333',\r\n    width: '100%',\r\n    '&:hover':{\r\n      backgroundColor: '#ddd',\r\n    }\r\n  },\r\n  navButtonSelected: {\r\n    color: '#333',\r\n    width: '100%',\r\n    backgroundColor: theme.palette.secondary.light,\r\n    '&:hover':{\r\n      backgroundColor: theme.palette.secondary.main,\r\n    }\r\n  },\r\n  drawerDiv: {\r\n    height: '100vh',\r\n    // backgroundColor: theme.palette.primary.main,\r\n    overflow: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  drawerPaperMobile: {\r\n    width: '80%',\r\n  },\r\n  drawerPaper: {\r\n    width: '20rem',\r\n  },\r\n  paperAnchorLeftMobile: {\r\n    width: '80%',\r\n  },\r\n  paperAnchorLeft: {\r\n    width: '20rem',\r\n  },\r\n}));\r\n\r\nconst navLinks = [\r\n  ['Home', '/', <HomeIcon/>], \r\n  ['Create group', '/createGroup', <CreateIcon/>],\r\n  ['Join group', '/joinGroup', <AddIcon/>],\r\n];\r\n\r\nexport default function Header(props) {\r\n  const classes = useStyles();\r\n\r\n  const { handleLoadGroups, groupsStatus, groups, groupsError } = props;\r\n  useEffect(() => {\r\n    handleLoadGroups();\r\n  }, []);\r\n\r\n  const location = useLocation();\r\n\r\n  const [selectedGroup, setSelectedGroup] = useState('');\r\n  const [selectedGroupID, setSelectedGroupID] = useState('');\r\n\r\n  useEffect(() => {\r\n    if(!groups) {\r\n      return;\r\n    }\r\n    setSelectedGroup('');\r\n    setSelectedGroupID('');\r\n    groups.forEach(group => {\r\n      if (location.pathname.startsWith(`/groups/${group.groupID.S}`)) {\r\n        setSelectedGroup(group.groupName.S);\r\n        setSelectedGroupID(group.groupID.S);\r\n      }\r\n    });\r\n  }, [groups, location])\r\n  \r\n  // mobile\r\n  const isMobile = useCheckMobile();\r\n\r\n  // Scroll effects\r\n  useEffect(() => {\r\n    window.onscroll = () => {\r\n      scrollFunction()\r\n    }\r\n  });\r\n\r\n  const [navElevation, setNavElevation] = useState(0);\r\n\r\n  function scrollFunction() {\r\n    const scroll = document.body.scrollTop || document.documentElement.scrollTop;\r\n    if(scroll === 0) {\r\n      setNavElevation(0);\r\n    } else {\r\n      setNavElevation(4);\r\n    }\r\n  }\r\n\r\n\r\n  // Menu \r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n\r\n  // render\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position='fixed' elevation={navElevation} className={isMobile || classes.appBar}>\r\n        <Toolbar>\r\n          {isMobile && <div>\r\n            <IconButton className={classes.navButton} onClick={() => setDrawerOpen(true)}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </div>}\r\n          <div>\r\n            <Button component={RouterLink} to=\"/\" className={classes.logoButton}>\r\n              {/* <img src=\"http://usaco.org/current/images/usaco_logo.png\" alt=\"logo\" className={classes.logo} style={{\r\n                maxHeight: logoRatio*navHeight,\r\n                transition: navTransitionSpeed,\r\n              }}/> */}\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                Chores\r\n              </Typography>\r\n            </Button>\r\n          </div>\r\n          <div style={{flexGrow: 1}}></div>\r\n          <div><Typography variant='h5'>{selectedGroup}</Typography></div>\r\n          <div style={{flexGrow: 1}}></div>\r\n          {/*isMobile || <div>\r\n            <Button variant='contained' color='secondary' className={classes.navButton} component={RouterLink} to={'/logout'}>\r\n              Logout\r\n            </Button>\r\n          </div> */ }\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer \r\n        variant={isMobile ? 'temporary' : 'permanent'}\r\n        anchor='left'\r\n        open={drawerOpen}\r\n        classes={{\r\n          paperAnchorLeft: isMobile ? classes.paperAnchorLeftMobile : classes.paperAnchorLeft,\r\n          paper: isMobile ? classes.drawerPaperMobile : classes.drawerPaper,\r\n        }}\r\n        style={{\r\n          width: isMobile ? '80%' : '20rem',\r\n          flexShrink: 0,\r\n        }}\r\n        onClose={() => setDrawerOpen(false)}\r\n      >\r\n        {isMobile || <Toolbar/>}\r\n        <div className={classes.drawerDiv}>\r\n          {/*isMobile && <Button\r\n            onClick={() => setDrawerOpen(false)}\r\n            className={classes.navButtonMobile}\r\n            style={{ height: `${Math.floor(100 / (navLinks.length + 2))}%`, maxHeight: 100 }}\r\n            onMouseEnter={handleHovering}\r\n            onMouseLeave={handleUnhovering}\r\n          >\r\n            <CloseIcon />\r\n          </Button>*/}\r\n          <List style={{overflow:'auto'}}>\r\n            {navLinks.map((text, index) => (\r\n              <ListItem button key={`navlink-${index}`} component={RouterLink} to={text[1]}\r\n                onClick={() => setDrawerOpen(false)}\r\n                className={props.selected === text[1] ? classes.navButtonSelected : classes.navButton}\r\n              >\r\n                <ListItemIcon>{text[2]}</ListItemIcon>\r\n                <ListItemText primary={text[0]}/>\r\n              </ListItem>\r\n            ))}\r\n            <Divider/>\r\n            <ListSubheader disableSticky>\r\n              <Typography variant='h6' style={{marginTop: '1rem',marginBottom: '.5rem'}}>\r\n                Your groups\r\n              </Typography>\r\n            </ListSubheader>\r\n            {groupsStatus === 1 && \r\n              <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item xs={3}>\r\n                  <CircularProgress/>\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n            {groupsStatus === 2 && groups.length === 0 && \r\n              <ListItem>\r\n                You do not have any groups at this time.\r\n              </ListItem>\r\n            }\r\n            {groupsStatus === 2 && \r\n              groups.map((group, index) => (\r\n                  <ListItem button \r\n                    key={`group-${group.groupID.S}`} \r\n                    component={RouterLink}\r\n                    onClick={() => setDrawerOpen(false)}\r\n                    to={`/groups/${group.groupID.S}`}\r\n                    className={selectedGroupID === group.groupID.S ? classes.navButtonSelected : classes.navButton}\r\n                  >\r\n                    <ListItemIcon><GroupIcon/></ListItemIcon>\r\n                    <ListItemText primary={group.groupName.S} secondary={group.groupID.S}></ListItemText>\r\n                  </ListItem>\r\n              ))\r\n            }\r\n            {groupsStatus === 3 && \r\n              <Typography variant='body1' style={{color: '#e57373'}}>Error: {groupsError}</Typography>\r\n            }\r\n          </List>\r\n          <div style={{flexGrow: 1}}></div>\r\n          <Divider/>\r\n          <List><ListItem button component={RouterLink} to={'/logout'}\r\n            onClick={() => setDrawerOpen(false)}\r\n            className={classes.navButton}\r\n          >\r\n            <ListItemIcon><ExitToAppIcon/></ListItemIcon>\r\n            <ListItemText primary='Logout'/>\r\n          </ListItem></List>\r\n        </div>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}","export default function parseJwt (token) {\r\n  var base64Url = token.split('.')[1];\r\n  var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n  var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n      return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n  }).join(''));\r\n\r\n  return JSON.parse(jsonPayload);\r\n};","import parseJwt from './parseJwt';\r\n\r\nconst REFRESH_TOKEN = 'refreshToken';\r\nconst IDENTITY_ID = 'identityID';\r\n\r\nconst initialMemoryTokens = {\r\n  idToken: null,\r\n  accessToken: null,\r\n  exp: -1,\r\n};\r\n\r\nlet inMemoryTokens = initialMemoryTokens;\r\n\r\nexport function setTokens(idToken, accessToken) {\r\n  inMemoryTokens = {\r\n    idToken: idToken,\r\n    accessToken: accessToken,\r\n    exp: Math.min(parseJwt(idToken).exp, parseJwt(accessToken).exp),\r\n  };;\r\n}\r\n\r\nexport function getTokens() {\r\n  const curTime = Math.ceil(Date.now()/1000) + 3*60; // current time in seconds + 3 minutes\r\n\r\n  // invalid tokens\r\n  if (curTime >= inMemoryTokens.exp) {\r\n    inMemoryTokens = initialMemoryTokens;\r\n  }\r\n\r\n  return inMemoryTokens;\r\n}\r\n\r\nexport function setRefreshToken(token) {\r\n  localStorage.setItem(REFRESH_TOKEN, token);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n  return localStorage.getItem(REFRESH_TOKEN);\r\n}\r\n\r\n// use for better security with IAM but who cares\r\n// export function setIdentityID(identityID) {\r\n//   localStorage.setItem(IDENTITY_ID, identityID);\r\n// }\r\n\r\n// export function getIdentityID() {\r\n//   return localStorage.getItem(IDENTITY_ID);\r\n// }\r\n\r\nexport function clearTokens() {\r\n  localStorage.removeItem(REFRESH_TOKEN);\r\n  localStorage.removeItem(IDENTITY_ID);\r\n  inMemoryTokens = initialMemoryTokens;\r\n}","import { InitiateAuthCommand, RevokeTokenCommand, SignUpCommand } from '@aws-sdk/client-cognito-identity-provider';\r\nimport { CognitoIdentityProviderClient } from \"@aws-sdk/client-cognito-identity-provider\";\r\nimport { fromCognitoIdentityPool } from '@aws-sdk/credential-provider-cognito-identity';\r\nimport { CognitoIdentityClient, GetIdCommand } from '@aws-sdk/client-cognito-identity';\r\n\r\nimport { clearTokens, getRefreshToken, getTokens, setRefreshToken, setTokens } from './tokens';\r\n\r\nexport const IDENTITY_POOL_ID = 'us-east-2:f1368add-2f4b-47fc-8b3c-8b65a1c909cb';\r\nexport const USER_POOL_ID = 'us-east-2_ZiUGD7hem';\r\nexport const REGION ='us-east-2';\r\nexport const COGNITO_ID = 'cognito-idp.'+REGION+'.amazonaws.com/'+USER_POOL_ID;\r\nconst COGNITO_CLIENT_ID = 'deg51c9v98amenr0il094snqc';\r\n\r\nconst cognitoClient = new CognitoIdentityProviderClient({\r\n  region: REGION,\r\n});\r\n\r\nlet authCognitoClient;\r\n\r\nexport async function login(username, password) {\r\n  try {\r\n    const response = await cognitoClient.send(new InitiateAuthCommand({\r\n      AuthFlow: 'USER_PASSWORD_AUTH',\r\n      ClientId: COGNITO_CLIENT_ID,\r\n      AuthParameters: {\r\n        USERNAME: username,\r\n        PASSWORD: password,\r\n      },\r\n    }));\r\n    \r\n    \r\n    authCognitoClient = new CognitoIdentityProviderClient({\r\n      region: REGION,\r\n      credentials: fromCognitoIdentityPool({\r\n        client: new CognitoIdentityClient({ region: REGION }),\r\n        identityPoolId: IDENTITY_POOL_ID,\r\n        logins: {\r\n          [COGNITO_ID]: response.AuthenticationResult.IdToken,\r\n        },\r\n        // userIdentifier: username,\r\n      }),\r\n    });\r\n\r\n    setTokens(response.AuthenticationResult.IdToken, response.AuthenticationResult.AccessToken);\r\n    setRefreshToken(response.AuthenticationResult.RefreshToken);\r\n\r\n    return {success: true, message: 'Logged in successfully!', response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function register(username, password, name) {\r\n  try {\r\n    const response = await cognitoClient.send(new SignUpCommand({\r\n      ClientId: COGNITO_CLIENT_ID,\r\n      Username: username,\r\n      Password: password,\r\n      UserAttributes: [\r\n        {Name: 'name', Value: name},\r\n      ],\r\n      ClientMetadata: {\r\n        'secretKey': process.env.REACT_APP_AUTO_CONFIRM_KEY,\r\n      },\r\n    }));\r\n\r\n    // log in auto after regsistering? \r\n    // need to add user to dynamo table...\r\n    // admin user: create group, regular: add to group\r\n\r\n    return {success: true, message: 'Registered successfully!', response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function logout() {\r\n\r\n  if (!authCognitoClient) {\r\n    authCognitoClient = new CognitoIdentityProviderClient({\r\n      region: REGION,\r\n      credentials: fromCognitoIdentityPool({\r\n        client: new CognitoIdentityClient({ region: REGION }),\r\n        identityPoolId: IDENTITY_POOL_ID,\r\n        logins: {\r\n          [COGNITO_ID]: (await getValidTokens()).idToken,\r\n        },\r\n        // userIdentifier: username,\r\n      }),\r\n    });\r\n  }\r\n\r\n  const refreshToken = getRefreshToken();\r\n  if (!refreshToken) {\r\n    return {success: true, message: 'Already logged out!'};\r\n  }\r\n\r\n  clearTokens();\r\n\r\n  try {\r\n    const response = await authCognitoClient.send(new RevokeTokenCommand({\r\n      ClientId: COGNITO_CLIENT_ID,\r\n      Token: refreshToken,\r\n    }));\r\n\r\n    authCognitoClient = null;\r\n    \r\n    return {success: true, message: 'Logged out succesfully!', response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function getValidTokens() {\r\n  const curTokens = getTokens();\r\n\r\n  if (curTokens.idToken && curTokens.accessToken) {\r\n    return curTokens;\r\n  }\r\n\r\n  const result = await refreshTokens();\r\n\r\n  if (result.success) {\r\n    return getTokens();\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function refreshTokens() {\r\n  const refreshToken = getRefreshToken();\r\n  if (!refreshToken) {\r\n    return {success: false, message: 'No refresh token found.'};\r\n  }\r\n\r\n  try {\r\n    const response = await cognitoClient.send(new InitiateAuthCommand({\r\n      AuthFlow: 'REFRESH_TOKEN_AUTH',\r\n      ClientId: COGNITO_CLIENT_ID,\r\n      AuthParameters: {\r\n        REFRESH_TOKEN: refreshToken,\r\n      },\r\n    }));\r\n\r\n    setTokens(response.AuthenticationResult.IdToken, response.AuthenticationResult.AccessToken);\r\n\r\n    return {success: true, message: 'success'};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n// export async function getValidIdentityID() {\r\n//   let identityID = getIdentityID();\r\n//   if (identityID) {\r\n//     return {success: true, identityID};\r\n//   }\r\n\r\n//   const tokens = await getValidTokens();\r\n\r\n//   if (!tokens) {\r\n//     return {success: false, message: 'no valid tokens'};\r\n//   }\r\n\r\n//   try {\r\n//     const identityClient = new CognitoIdentityClient({ region: REGION });\r\n\r\n//     const response = await identityClient.send(new GetIdCommand({\r\n//       IdentityPoolId: IDENTITY_POOL_ID,\r\n//       Logins: {\r\n//         [COGNITO_ID]: tokens.idToken,\r\n//       },\r\n//     }));\r\n\r\n//     setIdentityID(response.identityID);\r\n//     return {success: true, identityID: response.identityID};\r\n//   } catch (err) {\r\n//     return {success: false, message: err.message};\r\n//   }\r\n// }\r\n","import  { DynamoDB } from '@aws-sdk/client-dynamodb';\r\nimport { fromCognitoIdentityPool } from '@aws-sdk/credential-provider-cognito-identity';\r\nimport { CognitoIdentityClient } from '@aws-sdk/client-cognito-identity';\r\nimport { getValidTokens, IDENTITY_POOL_ID, COGNITO_ID, REGION } from './auth';\r\n\r\nlet dynamoClient;\r\n\r\nexport async function getNewDynamoClient() {\r\n  const tokens = await getValidTokens();\r\n  if (!tokens) {\r\n    return {success: false, message: 'no valid tokens'};\r\n  }\r\n\r\n  dynamoClient = new DynamoDB({\r\n    region: REGION, \r\n    credentials: fromCognitoIdentityPool({\r\n      client: new CognitoIdentityClient({ region: REGION }),\r\n      identityPoolId: IDENTITY_POOL_ID,\r\n      logins: {\r\n        [COGNITO_ID]: tokens.idToken,\r\n      },\r\n      // userIdentifier: username,\r\n    }),\r\n  });\r\n\r\n  return {success: true, dynamoClient, tokens};\r\n}","import { v4 as uuidv4 } from 'uuid';\r\nimport  { PutItemCommand, GetItemCommand, QueryCommand, DeleteItemCommand } from '@aws-sdk/client-dynamodb';\r\n\r\nimport { getNewDynamoClient } from './dynamo';\r\nimport parseJwt from './parseJwt';\r\n\r\n// get all of a user's tasks. if no user provided, use current user\r\nexport async function listUserTasks(userID) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  if(!userID) {\r\n    userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n  }\r\n\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-tasks',\r\n      KeyConditionExpression: 'userID = :user',\r\n      ExpressionAttributeValues: {\r\n        ':user': {S: userID},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, message: 'Tasks listed!', response: response.Items};\r\n  } catch(err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n// get all of a user's tasks in a specific group. if no user provided, use current user\r\nexport async function listUserGroupTasks(groupID, userID) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  if(!userID) {\r\n    userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n  }\r\n\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-tasks',\r\n      KeyConditionExpression: 'userID = :user AND begins_with(#g, :group)',\r\n      ExpressionAttributeValues: {\r\n        ':user': {S: userID},\r\n        ':group': {S: groupID},\r\n      },\r\n      ExpressionAttributeNames: {\r\n        '#g' : 'groupID#taskID',\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, message: 'Tasks for this group listed!', response: response.Items};\r\n  } catch(err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n// get all tasks in a group - use gsi\r\n// TODO - modify gsi to use less attributes\r\nexport async function listGroupTasks(group) {\r\n\r\n  if (!group) {\r\n    return {success: false, message: 'no group provided'};\r\n  }\r\n  if (group.role.S !== 'owner') {\r\n    return {success: false, message: 'insufficient permissions'};\r\n  }\r\n  const groupID = group.groupID.S;\r\n\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-tasks',\r\n      IndexName: 'groupID-taskID-index',\r\n      KeyConditionExpression: 'groupID = :group',\r\n      ExpressionAttributeValues: {\r\n        ':group': {S: groupID},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, message: 'Tasks for this group listed!', response: response.Items};\r\n  } catch(err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n\r\n// get all tasks in a group assigned to a specific user - use gsi\r\n// export async function listGroupUserTasks(groupID, userID) {\r\n//   const client = await getNewDynamoClient();\r\n//   if(!client.success) {\r\n//     return {success: false, message: client.message};\r\n//   }\r\n\r\n//   const dynamoClient = client.dynamoClient;\r\n//   try {\r\n//     const queryParams = {\r\n//       TableName: 'chore-web-app-tasks',\r\n//       IndexName: 'groupID-userID-index',\r\n//       KeyConditionExpression: 'groupID = :group AND userID = :user',\r\n//       ExpressionAttributeValues: {\r\n//         ':group': {S: groupID},\r\n//         ':user': {S: userID},\r\n//       },\r\n//     };\r\n\r\n//     const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n//     return {success: true, response};\r\n//   } catch(err) {\r\n//     return {success: false, message: err.message};\r\n//   }\r\n// }\r\n\r\n// create a new task with specified information\r\nexport async function createTask(group, user, taskName, taskDescription, taskDays) {\r\n  if(!group || !user || !taskName || !taskDays || taskDays.length === 0) {\r\n    return {success: false, message: 'missing required parameters'};\r\n  }\r\n  if(!taskDescription) {\r\n    taskDescription = '';\r\n  }\r\n  if(group.role.S !== 'owner') {\r\n    return {success: false, message: 'insufficient permissions'};\r\n  }\r\n\r\n  const groupID = group.groupID.S;\r\n  const userID = user.userID.S;\r\n  const userName = user.userName.S;\r\n\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const taskID = uuidv4();\r\n\r\n  try {\r\n    const putParams = {\r\n      TableName: 'chore-web-app-tasks',\r\n      Item: {\r\n        'groupID': {S: groupID},\r\n        'userID': {S: userID},\r\n        'userName': {S: userName},\r\n        'taskName': {S: taskName},\r\n        'taskDescription': {S: taskDescription},\r\n        'taskDays': {SS: taskDays},\r\n        'groupID#taskID': {S: `${groupID}#${taskID}`},\r\n        'taskID': {S: taskID},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new PutItemCommand(putParams));\r\n\r\n    return {success: true, message: 'Task created successfully!', response};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n// if not group owner, use current user id\r\nexport async function getTask(group, taskID) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n  const groupID = group.groupID.S\r\n\r\n  try {\r\n    if(group.role.S === 'owner') {\r\n      const queryParams = {\r\n        TableName: 'chore-web-app-tasks',\r\n        IndexName: 'groupID-taskID-index',\r\n        KeyConditionExpression: 'groupID = :group AND taskID = :task',\r\n        ExpressionAttributeValues: {\r\n          ':group': {S: groupID},\r\n          ':task': {S: taskID},\r\n        }\r\n      };\r\n      \r\n      const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n      if (response.Count === 0) {\r\n        return {success: false, message: 'no such item exists'};\r\n      } else if (response.Count > 1) {\r\n        return {success: false, message: 'more than one item matched these details'};\r\n      }\r\n\r\n      return {success: true, message: 'Got task.', response: response.Items[0]};\r\n    } else {\r\n      const getParams = {\r\n        TableName: 'chore-web-app-tasks',\r\n        Key: {\r\n          'userID': {S: userID},\r\n          'groupID#taskID': {S: `${groupID}#${taskID}`},\r\n        }\r\n      };\r\n\r\n      const response = await dynamoClient.send(new GetItemCommand(getParams));\r\n\r\n      return {success: true, message: 'Got task.', response: response.Item};\r\n    }\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n// delete the given task\r\nexport async function deleteTask(userID, group, taskID) {\r\n  if(group.role.S !== 'owner') {\r\n    return {success: false, message: 'insufficient permissions'};\r\n  }\r\n\r\n  const groupID = group.groupID.S;\r\n\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n  try {\r\n    const deleteParams = {\r\n      TableName: 'chore-web-app-tasks',\r\n      Key: {\r\n        'userID': {S: userID},\r\n        'groupID#taskID': {S: `${groupID}#${taskID}`},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new DeleteItemCommand(deleteParams));\r\n\r\n    return {success: true, message: 'Task deleted successfully!', response};\r\n  } catch(err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}","import  { PutItemCommand, GetItemCommand, UpdateItemCommand, QueryCommand, DeleteItemCommand } from '@aws-sdk/client-dynamodb';\r\n\r\nimport { getNewDynamoClient } from './dynamo';\r\nimport parseJwt from './parseJwt';\r\nimport { listGroupTasks, listUserGroupTasks } from './tasks';\r\n\r\n\r\n// generates a group id using only numbers and upper case letters \r\n// 36^6 = 2*10^9 codes\r\nfunction generateGroupID() {\r\n  const length = 6;\r\n  let id = '';\r\n  for(let i = 0; i < length; i++) {\r\n    const dig = Math.floor(Math.random()*36);\r\n    let chr =''\r\n    if (dig < 10) {\r\n      chr = dig.toString();\r\n    } else {\r\n      chr = String.fromCharCode(dig - 10 + 65);\r\n    }\r\n    id = id.concat(chr);\r\n  }\r\n\r\n  return id;\r\n}\r\n\r\nexport async function generateValidGroupID(dynamoClient=null) {\r\n\r\n  if(!dynamoClient) {\r\n    const client = await getNewDynamoClient();\r\n    if (!client.success) {\r\n      return {success: false, message: client.message};\r\n    }\r\n\r\n    dynamoClient = client.dynamoClient;\r\n  }\r\n\r\n  let works = false;\r\n  let groupCode='';\r\n\r\n  const startTime = Date.now(); // cur time in ms\r\n\r\n  while(!works) {\r\n    // timeout after 5 secs\r\n    if (Date.now() - startTime > 5000){\r\n      return {success: false, message: 'Timed out before a valid group id was found.'};\r\n    }\r\n\r\n    groupCode = generateGroupID();\r\n    console.log('trying id:', groupCode);\r\n\r\n    try {\r\n      const getParams ={\r\n        TableName: 'chore-web-app-groups',\r\n        Key: {\r\n          groupID: {'S': groupCode},\r\n        },\r\n      }\r\n  \r\n      const response = await dynamoClient.send(new GetItemCommand(getParams));\r\n      \r\n      // console.log(response);\r\n      if(response.Item) {\r\n        works = false;\r\n      } else {\r\n        works = true;\r\n      }\r\n    } catch (err) {\r\n      // console.log(err);\r\n      return {success: false, message: err.message};\r\n    }\r\n  }\r\n\r\n  // console.log('found valid id:', groupCode);\r\n  return {success: true, groupCode};\r\n}\r\n\r\n\r\nexport async function createGroup(groupName) {\r\n\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const groupID = await generateValidGroupID(dynamoClient);\r\n  if (!groupID.success) {\r\n    return {success: false, message: groupID.message};\r\n  }\r\n\r\n  const parsedToken = parseJwt(client.tokens.idToken);\r\n  const ownerName = parsedToken['name'];\r\n  const ownerID = parsedToken['cognito:username']\r\n\r\n  try {\r\n    const putGroupParams = {\r\n      TableName: 'chore-web-app-groups',\r\n      Item: {\r\n        'groupID': {S: groupID.groupCode},\r\n        'groupName': {S: groupName},\r\n        'numUsers': {N : '1'},\r\n        'ownerID': {S: ownerID},\r\n        'ownerName': {S: ownerName},\r\n        'users': {SS: [ownerID]},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new PutItemCommand(putGroupParams));\r\n    \r\n    const putUserGroupParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      Item: {\r\n        'userID': {S: ownerID},\r\n        'groupID': {S: groupID.groupCode},\r\n        'userName': {S: ownerName},\r\n        'groupName': {S: groupName},\r\n        'role': {S: 'owner'},\r\n      },\r\n    };\r\n\r\n    const response2 = await dynamoClient.send(new PutItemCommand(putUserGroupParams));\r\n\r\n    return {success: true, message: 'Group created successfully!', response, response2};\r\n  } catch(err) {\r\n    console.log(err);\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function joinGroup(groupCode) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const parsedToken = parseJwt(client.tokens.idToken)\r\n  const userID = parsedToken['cognito:username'];\r\n  const userName = parsedToken['name'];\r\n\r\n  try {\r\n\r\n    const getGroupParams = {\r\n      TableName: 'chore-web-app-groups',\r\n      Key: {\r\n        groupID: {'S': groupCode},\r\n      },\r\n    }\r\n\r\n    const response = await dynamoClient.send(new GetItemCommand(getGroupParams));\r\n\r\n    if (!response.Item) {\r\n      return {success: false, message: 'Invalid group code'};\r\n    }\r\n\r\n    const updateGroupParams = {\r\n      TableName: 'chore-web-app-groups',\r\n      Key: {\r\n        groupID: {'S': groupCode},\r\n      },\r\n      ConditionExpression: 'attribute_exists(#u)', // AND NOT contains(#u, :userID)\r\n      UpdateExpression: 'ADD #u :userIDSet, numUsers :one',\r\n      ExpressionAttributeNames: {\r\n        '#u':'users',\r\n      },\r\n      ExpressionAttributeValues: {\r\n        // ':userID': {S: userID},\r\n        ':userIDSet': {SS: [userID]},\r\n        ':one': {N: '1'},\r\n      },\r\n    };\r\n\r\n    const response2 = await dynamoClient.send(new UpdateItemCommand(updateGroupParams));\r\n\r\n    const putUserGroupParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      Item: {\r\n        'userID': {S: userID},\r\n        'groupID': {S: groupCode},\r\n        'userName': {S: userName},\r\n        'groupName': {S: response.Item.groupName.S},\r\n        'role': {S: 'regular'},\r\n      },\r\n    };\r\n\r\n    const response3 = await dynamoClient.send(new PutItemCommand(putUserGroupParams));\r\n\r\n    return {success: true, message: 'Group joined successfully!', response, response2, response3};\r\n  } catch (err) {\r\n    if(err.message === 'The conditional request failed') {\r\n      err.message = 'You are already in this group';\r\n    }\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function listGroups() {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  const userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      KeyConditionExpression: 'userID = :user',\r\n      ExpressionAttributeValues: {\r\n        ':user': {S: userID},\r\n      },\r\n    }\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, response: response.Items};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n\r\n}\r\n\r\nexport async function listUsersInGroup(groupID){\r\n  if(!groupID) {\r\n    return {success: false, message: 'group id requried'};\r\n  }\r\n\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  try {\r\n    const queryParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      IndexName: 'groupID-userID-index',\r\n      KeyConditionExpression: 'groupID = :group',\r\n      ExpressionAttributeValues: {\r\n        ':group': {S: groupID},\r\n      },\r\n    }\r\n\r\n    const response = await dynamoClient.send(new QueryCommand(queryParams));\r\n\r\n    return {success: true, message: 'Groups listed!', response: response.Items};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\nexport async function removeUserFromGroup(group, user) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n  let userID;\r\n\r\n  if(!user) {\r\n    userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n    if (group.role.S === 'owner') {\r\n      return {success: false, message: 'owner cannot leave group, delete instead'};\r\n    }\r\n  } else {\r\n    userID = user.userID.S;\r\n    if (group.role.S !== 'owner') {\r\n      return {success: false, message: 'insufficient permissions'};\r\n    } else if (user.role.S === 'owner') {\r\n      return {success: false, message: 'owner cannot leave group, delete instead'};\r\n    }\r\n  }\r\n\r\n  const groupID = group.groupID.S;\r\n\r\n  const getTasks = await listUserGroupTasks(groupID, userID);\r\n  if(!getTasks.success) {\r\n    return {success: false, message: getTasks.message};\r\n  }\r\n  const tasks = getTasks.response;\r\n\r\n  try {\r\n    const deleteParams = {\r\n      TableName: 'chore-web-app-usergroups',\r\n      Key: {\r\n        'userID': {S: userID},\r\n        'groupID': {S: groupID},\r\n      },\r\n    };\r\n\r\n    const response = await dynamoClient.send(new DeleteItemCommand(deleteParams));\r\n\r\n    const taskResponses = [];\r\n    for (const task of tasks) {\r\n      const deleteTaskParams = {\r\n        TableName: 'chore-web-app-tasks',\r\n        Key: {\r\n          'userID': {S : userID},\r\n          'groupID#taskID': {S: task['groupID#taskID'].S},\r\n        },\r\n      };\r\n      const taskResponse = await dynamoClient.send(new DeleteItemCommand(deleteTaskParams));\r\n      taskResponses.push(taskResponse);\r\n    }\r\n\r\n    const updateGroupParams = {\r\n      TableName: 'chore-web-app-groups',\r\n      Key: {\r\n        groupID: {'S': groupID},\r\n      },\r\n      ConditionExpression: 'attribute_exists(#u) AND contains(#u, :userID)',\r\n      UpdateExpression: 'ADD numUsers :one DELETE #u :userIDSet',\r\n      ExpressionAttributeNames: {\r\n        '#u':'users',\r\n      },\r\n      ExpressionAttributeValues: {\r\n        ':userID': {S: userID},\r\n        ':userIDSet': {SS: [userID]},\r\n        ':one': {N: '-1'},\r\n      },\r\n    };\r\n\r\n    const response2 = await dynamoClient.send(new UpdateItemCommand(updateGroupParams));\r\n\r\n    return {success: true, message: user ? 'User removed from group.' : 'You have left this group.', response, response2, taskResponses};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}\r\n\r\n\r\nexport async function deleteGroup(group) {\r\n  const client = await getNewDynamoClient();\r\n  if(!client.success) {\r\n    return {success: false, message: client.message};\r\n  }\r\n\r\n  const dynamoClient = client.dynamoClient;\r\n\r\n  if(group.role.S !== 'owner') {\r\n    return {success: false, message: 'insufficient permissions'};\r\n  }\r\n  const groupID = group.groupID.S;\r\n\r\n  const userID = parseJwt(client.tokens.idToken)['cognito:username'];\r\n\r\n  const getTasks = await listGroupTasks(group);\r\n  if(!getTasks.success) {\r\n    return {success: false, message: getTasks.message};\r\n  }\r\n  const tasks = getTasks.response;\r\n\r\n  try {\r\n    const deleteGroupParams = {\r\n      TableName: 'chore-web-app-groups',\r\n      Key: {\r\n        groupID: {S: groupID},\r\n      },\r\n      ConditionExpression: 'ownerID = :user',\r\n      ExpressionAttributeValues: {\r\n        ':user': {'S' : userID},\r\n      },\r\n      ReturnValues: 'ALL_OLD',\r\n    };\r\n\r\n    const response = await dynamoClient.send(new DeleteItemCommand(deleteGroupParams));\r\n    const users = response.Attributes.users.SS;\r\n\r\n    const userResponses = [];\r\n    for (const user of users) {\r\n      const deleteUserGroupParams = {\r\n        TableName: 'chore-web-app-usergroups',\r\n        Key: {\r\n          'userID': {S: user},\r\n          'groupID': {S: groupID},\r\n        },\r\n      };\r\n\r\n      const userResponse = await dynamoClient.send(new DeleteItemCommand(deleteUserGroupParams));\r\n      userResponses.push(userResponse);\r\n    }\r\n\r\n    const taskResponses = [];\r\n    for (const task of tasks) {\r\n      const deleteTaskParams = {\r\n        TableName: 'chore-web-app-tasks',\r\n        Key: {\r\n          'userID': {S : task.userID.S},\r\n          'groupID#taskID': {S: task['groupID#taskID'].S},\r\n        },\r\n      };\r\n      const taskResponse = await dynamoClient.send(new DeleteItemCommand(deleteTaskParams));\r\n      taskResponses.push(taskResponse);\r\n    }\r\n\r\n    return {success: true, message: 'Group deleted', response, userResponses, taskResponses};\r\n  } catch (err) {\r\n    return {success: false, message: err.message};\r\n  }\r\n}","import { useState } from \"react\";\r\n\r\n// apiFunction = the async function which provides an object output with \"success\", \"reponse\", and \"message\"\r\n// getApiParams = a function which returns the most updated parameters to pass to the api\r\nexport default function useApi(apiFunction, getApiParams=()=>[], preCall, postCall, onSuccess, onFail) {\r\n  const [apiResult, setApiResult] = useState(null);\r\n  const [apiStatus, setApiStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  const [apiMessage, setApiMessage] = useState('');\r\n\r\n  \r\n  async function handleCallApi(preParams=[], postParams=[]) {\r\n    setApiStatus(1);\r\n\r\n    if(preCall) {\r\n      await preCall(...preParams, ...postParams);\r\n    }\r\n    \r\n    \r\n    const result = await apiFunction(...preParams, ...getApiParams(), ...postParams);\r\n    // console.log(result);\r\n\r\n    if(postCall) {\r\n      await postCall(...preParams, ...postParams);\r\n    }\r\n\r\n    if(result.success) {\r\n\r\n      if(onSuccess) {\r\n        await onSuccess(...preParams, ...postParams);\r\n      }\r\n\r\n      setApiResult(result.response);\r\n      setApiMessage(result.message);\r\n      setApiStatus(2);\r\n    } else {\r\n\r\n      if(onFail) {\r\n        await onFail(...preParams, ...postParams);\r\n      }\r\n\r\n      setApiMessage(result.message);\r\n      setApiStatus(3);\r\n    }\r\n  }\r\n\r\n  return [handleCallApi, apiResult, apiStatus, apiMessage, [setApiResult, setApiStatus, setApiMessage]];\r\n}","import { useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport Header from \"./Header\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport { getValidTokens } from '../utils/auth';\r\nimport { listGroups } from '../utils/groups';\r\nimport useApi from '../utils/useApi';\r\n\r\nexport default function PrivateRoute({\r\n  component: Component, \r\n  selected, \r\n  ...rest\r\n}) {\r\n\r\n  const [authenticated, setAuthenticated] = useState(0); // 0 = awaiting, 1 = authenticated, -1 = failed\r\n\r\n  if(authenticated === 0) {\r\n    // Add your own authentication on the below line.\r\n    getValidTokens().then((result) => {\r\n      if (result) {\r\n        setAuthenticated(1);\r\n      } else {\r\n        setAuthenticated(-1);\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      setAuthenticated(-1);\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  // groups\r\n  const [handleLoadGroups, groups, groupsStatus, groupsError] = useApi(listGroups);\r\n\r\n  // const [groups, setGroups] = useState([]);\r\n  // const [groupsStatus, setGroupsStatus] = useState(0); // 0 = nothing, 1 = loading, 2 = success, 3 = error\r\n  // const [groupsError, setGroupsError] = useState('');\r\n\r\n  // async function handleLoadGroups() {\r\n  //   setGroupsStatus(1);\r\n  //   const result = await listGroups();\r\n    \r\n  //   // console.log(result);\r\n\r\n  //   if (result.success) {\r\n  //     setGroups(result.response.Items);\r\n  //     setGroupsStatus(2);\r\n  //   } else {\r\n  //     setGroupsStatus(3);\r\n  //     setGroupsError(result.message);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <Route\r\n     {...rest} \r\n     render={props =>\r\n      (authenticated === 0) ? (\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: '100vh' }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <CircularProgress/>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        (authenticated === 1) ? (\r\n          <div style={{display: 'flex'}}>\r\n            <Header \r\n              selected={selected} \r\n              groups={groups}\r\n              groupsStatus={groupsStatus}\r\n              groupsError={groupsError}\r\n              handleLoadGroups={() => handleLoadGroups()}\r\n            />\r\n            <main style={{flexGrow: 1, padding: '2rem'}}>\r\n              <Toolbar/>\r\n              <Component \r\n                {...props}\r\n                handleLoadGroups={() => handleLoadGroups()}\r\n                groups={groups}\r\n                groupsStatus={groupsStatus}\r\n              />\r\n            </main>\r\n          </div>\r\n        ) : (\r\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        )\r\n      )\r\n    }/>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { getValidTokens } from '../utils/auth';\r\n\r\nexport default function PublicRoute({\r\n  component: Component,\r\n  ...rest\r\n}) {\r\n\r\n  const [authenticated, setAuthenticated] = useState(0); // 0 = awaiting, 1 = authenticated, -1 = failed\r\n\r\n  if(authenticated === 0) {\r\n    // Add your own authentication on the below line.\r\n    getValidTokens().then((result) => {\r\n      if (result) {\r\n        setAuthenticated(1);\r\n      } else {\r\n        setAuthenticated(-1);\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      setAuthenticated(-1);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Route\r\n     {...rest} \r\n     render={props =>\r\n      (authenticated === 0) ? (\r\n        <Grid\r\n          container\r\n          spacing={0}\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n          style={{ minHeight: '100vh' }}\r\n        >\r\n          <Grid item xs={3}>\r\n            <CircularProgress/>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        (authenticated === -1) ? (\r\n          <div>\r\n            <main>\r\n              <Component {...props}/>\r\n            </main>\r\n          </div>\r\n        ) : (\r\n          <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n        )\r\n      )\r\n    }/>\r\n  );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    backgroundColor: theme.palette.error.main,\r\n    color: '#fff',\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main,\r\n    color: '#fff',\r\n  },\r\n  default: {\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport default function SnackbarAlert(props) {\r\n  const { message, setMessage, status } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Snackbar open={message}>\r\n      <Card className={[classes.default, classes.default, classes.success, classes.error][status]}>\r\n        <div style={{display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: 7}}>\r\n          {[null,<HourglassEmptyIcon/>,<DoneIcon/>,<ErrorIcon/>][status]}\r\n          <div style={{marginLeft: 10, marginRight: 10}}>\r\n            {message}\r\n          </div>\r\n          <div style={{flexGrow: 1}}/>\r\n          <IconButton \r\n            onClick={() => setMessage('')}\r\n            aria-label=\"close\"\r\n            size=\"small\"\r\n            style={{color: '#fff'}}\r\n          >\r\n            <CloseIcon fontSize=\"inherit\"/>\r\n          </IconButton>\r\n        </div>\r\n      </Card>\r\n    </Snackbar>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\nimport { listUserTasks } from '../utils/tasks';\r\nimport useApi from '../utils/useApi';\r\nimport SnackbarAlert from './SnackbarAlert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  day: {\r\n    margin: 2,\r\n    color: '#bbb'\r\n  },\r\n  dayIncluded: {\r\n    margin: 2,\r\n    color: '#000',\r\n  },\r\n}));\r\n\r\nconst days = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n];\r\n\r\nexport default function Home() {\r\n  const classes = useStyles();\r\n\r\n  // tasks\r\n  const [handleGetUserTasks, userTasks, userTasksStatus, userTasksMessage, [,,setUserTasksMessage]] = useApi(listUserTasks);\r\n  useEffect(() => handleGetUserTasks(), []);\r\n  \r\n  // const [userTasks, setUserTasks] = useState(null);\r\n  // const [userTasksStatus, setUserTasksStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  // const [userTasksMessage, setUserTasksMessage] = useState('');\r\n\r\n  // async function handleGetUserTasks() {\r\n  //   setUserTasksStatus(1);\r\n  //   const result = await listUserTasks();\r\n  //   console.log(result);\r\n\r\n  //   if(result.success) {\r\n  //     setUserTasks(result.response.Items);\r\n  //     setUserTasksStatus(2);\r\n  //   } else {\r\n  //     setUserTasksStatus(3);\r\n  //     setUserTasksMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', alignItems: 'center' }}>\r\n        <IconButton disabled={userTasksStatus < 2} onClick={() => handleGetUserTasks()}>\r\n          <RefreshIcon />\r\n        </IconButton>\r\n        <Typography variant='h6'>{userTasksStatus === 2 && userTasks && `You have ${userTasks.length} tasks`}</Typography>\r\n      </div>\r\n      {userTasksStatus === 1 ?\r\n        <CircularProgress />\r\n        : (userTasksStatus === 2 && userTasks) ?\r\n          <List style={{ marginBottom: 30 }}>\r\n            {userTasks.length === 0 && 'You do not have any tasks at this time.'}\r\n            {userTasks.map((task, index) => (\r\n              <ListItem \r\n                key={`user-task-${index}-${task.taskID.S}`} \r\n                button \r\n                component={RouterLink} \r\n                to={`/groups/${task.groupID.S}/tasks/${task.taskID.S}`}\r\n                style={{ borderWidth: 1, borderColor: '#333', borderStyle: 'solid', borderRadius: 5, marginBottom: 5 }}\r\n              >\r\n                <div style={{ display: 'flex', width: '100%', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                  <ListItemText\r\n                    primary={task.taskName.S}\r\n                    secondary={`${task.taskDescription.S.length > 47 ? `${task.taskDescription.S.substring(0, 47)}...` : task.taskDescription.S}`}\r\n                  style={{overflowWrap: 'anywhere'}}\r\n                  />\r\n                  <div style={{ display: 'flex', justifyContent: 'flex-end', flexGrow: 1, marginLeft: 10 }}>\r\n                    {days.map((day) => {\r\n                      const included = task.taskDays.SS.includes(day);\r\n                      return (\r\n                        //task.taskDays.SS.includes(day) ? <Chip key={day} label={day} style={{margin: 2}} /> : null\r\n                        <div className={included ? classes.dayIncluded : classes.day}>{day[0]}</div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          : <SnackbarAlert message={userTasksMessage} setMessage={setUserTasksMessage} status={userTasksStatus}/>\r\n      }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1>about</h1>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// import logo from './images/kmlogo-transparent.png';\r\nexport default function Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href={props.link || \"https://madmobileapps.com\"}>\r\n        {props.name || \"MAD Mobile Apps\"}\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Copyright from './Copyright';\r\nimport { login } from '../utils/auth';\r\nimport useApi from '../utils/useApi';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n      margin: theme.spacing(0, 0, 2),\r\n  },\r\n  buttonProgress: {\r\n    color: blue[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\nexport default function Login(props) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [handleLogin, , loginStatus, errorMessage, [,,setErrorMessage]] = useApi(\r\n    login,\r\n    () => [username, password],\r\n    () => {},\r\n    () => {},\r\n    () => history.push('/')\r\n  );\r\n\r\n  // const [loginStatus, setLoginStatus] = useState(0); // 0 = not submitted, 1 = loading, 2 = success, 3 = error\r\n  // const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // async function handleLogin(event) {\r\n  //   event.preventDefault();\r\n  //   setLoginStatus(1);\r\n    \r\n  //   const result = await login(username, password);\r\n\r\n  //   console.log(result);\r\n\r\n  //   if(result.success) {\r\n  //     setLoginStatus(2);\r\n  //     history.push('/');\r\n  //   } else {\r\n  //     setLoginStatus(3);\r\n  //     setErrorMessage(result.message);\r\n  //     // allow resubmission after 5 seconds\r\n  //     setTimeout(() => setLoginStatus(0), 5000);\r\n  //   }\r\n  // }\r\n\r\n  function handleUsernameChange(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {/*TODO: fix logo */}\r\n        {/* <img alt=\"K&M Tax Document Upload\" src={logo}/> */}\r\n        <Typography component=\"h1\" variant=\"h4\" className={classes.title}>\r\n            Chore App\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Log In\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(e) => {e.preventDefault(); handleLogin()}}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            type=\"username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            // error={emailError}\r\n            value={username}\r\n            onInput={handleUsernameChange}\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onInput={handlePasswordChange}\r\n          />\r\n          <Collapse in={errorMessage}>\r\n            {/* <Alert severity=\"error\">{errorMessage}</Alert> */}\r\n            <Card style={{backgroundColor: '#e57373'}}>\r\n              <div style={{display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: 7}}>\r\n                <ErrorIcon/>\r\n                <div style={{marginLeft: 10, marginRight: 10}}>\r\n                  {errorMessage}\r\n                </div>\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton \r\n                  onClick={() => setErrorMessage('')}\r\n                  aria-label=\"close\"\r\n                  size=\"small\"\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\"/>\r\n                </IconButton>\r\n              </div>\r\n            </Card>\r\n          </Collapse>\r\n          <div className={classes.wrapper}>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={loginStatus === 1 || loginStatus === 2}\r\n            >\r\n              {loginStatus === 1 ?\r\n              <CircularProgress size={24}/>\r\n              :  \"Login\"\r\n              }\r\n            </Button>\r\n          </div>\r\n          \r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/register\" variant=\"body2\">\r\n                Don't have an account? Register\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright name=\"MAD Mobile Apps\" link=\"https://madmobileapps.com\"/>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { useState, useEffect } from 'react';\r\nimport { useHistory} from 'react-router-dom';\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { logout } from '../utils/auth';\r\n\r\nexport default function Logout() {\r\n  const history = useHistory();\r\n  \r\n  const [logoutStatus, setLogoutStatus] = useState(0); // 0 = not clicked, 1 = loading, 2 = success, 3 = error\r\n\r\n  useEffect(() => {\r\n    handleLogout();\r\n  }, []);\r\n\r\n  async function handleLogout() {\r\n    setLogoutStatus(1);\r\n\r\n    const result = await logout();\r\n\r\n    console.log(result);\r\n\r\n    if (result.success) {\r\n      history.push('/login');\r\n    } else {\r\n      setLogoutStatus(3);\r\n      // error handling\r\n      console.log('error logging out');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ minHeight: '100vh' }}\r\n    >\r\n      <Grid item xs={3}>\r\n        {logoutStatus === 0 && \r\n          <Button onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        }\r\n        {logoutStatus === 1 &&\r\n          <CircularProgress/>\r\n        }\r\n        {logoutStatus === 2 &&\r\n          'Logout successful.'\r\n        }\r\n        {logoutStatus === 3 &&\r\n          <div>\r\n            Logout failed.\r\n            <br/>\r\n            <Button onClick={handleLogout}>\r\n              Try again\r\n            </Button>\r\n          </div>\r\n        }\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from '@material-ui/core/Card';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n// import Radio from '@material-ui/core/Radio';\r\n// import RadioGroup from '@material-ui/core/RadioGroup';\r\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\r\n// import FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport HourglassEmptyIcon from '@material-ui/icons/HourglassEmpty';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nimport Copyright from './Copyright';\r\nimport { register } from '../utils/auth';\r\nimport useApi from '../utils/useApi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  title: {\r\n    margin: theme.spacing(0, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Register(props) {\r\n  const classes = useStyles();\r\n\r\n  // const [role, setRole] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // const [groupName, setGroupName] = useState('');\r\n  // const [groupCode, setGroupCode] = useState('');\r\n\r\n  const [handleRegister, , registerStatus, responseMessage, [,,setResponseMessage]] = useApi(register, () => [username, password, name]);\r\n\r\n  // const [registerStatus, setRegisterStatus] = useState(0); // 0 = not submitted, 1 = loading, 2 = success, 3 = error\r\n  // const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // async function handleRegister(event) {\r\n  //   event.preventDefault();\r\n  //   setRegisterStatus(1);\r\n    \r\n  //   const result = await register(username, password, name);\r\n\r\n  //   if (result.success) {\r\n  //     setRegisterStatus(2);\r\n  //     // auto login?\r\n  //     // history.push('/login');\r\n  //     setResponseMessage(result.message);\r\n  //   } else {\r\n  //     setRegisterStatus(3);\r\n  //     setResponseMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  // function handleRoleChange(event) {\r\n  //   setRole(event.target.value);\r\n  // }\r\n  function handleUsernameChange(event) {\r\n    setUsername(event.target.value);\r\n  }\r\n  function handleNameChange(event) {\r\n    setName(event.target.value);\r\n  }\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n  // function handleGroupNameChange(event) {\r\n  //   setGroupName(event.target.value);\r\n  // }\r\n  // function handleGroupCodeChange(event) {\r\n  //   setGroupCode(event.target.value);\r\n  // }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        {/*TODO: fix logo */}\r\n        {/* <img alt=\"K&M Tax Document Upload\" src={logo}/> */}\r\n        <Typography component=\"h1\" variant=\"h4\" className={classes.title}>\r\n            Chore App\r\n        </Typography>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon/>\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Register\r\n        </Typography>\r\n        <div style={{height:10}}/>\r\n        <form className={classes.form} onSubmit={(e) => {e.preventDefault(); handleRegister()}}>\r\n          {/* <RadioGroup \r\n            row \r\n            style={{alignItems:'center', justifyContent: 'center'}} \r\n            name='role' \r\n            value={role} \r\n            onChange={handleRoleChange}\r\n          >\r\n            <Typography style={{marginRight: 3}} variant='h6'>I am a:</Typography>\r\n            <FormControlLabel \r\n              style={{margin: 0}}\r\n              value=\"parent\"\r\n              control={<Radio required disabled={loginStatus === 1 || loginStatus === 2}/>}\r\n              label=\"Parent\"\r\n            />\r\n            <FormControlLabel\r\n              style={{margin: 0}} \r\n              value=\"child\" \r\n              control={<Radio required disabled={loginStatus === 1 || loginStatus === 2}/>} \r\n              label=\"Child\"\r\n            />\r\n          </RadioGroup> */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"username\"\r\n            label=\"Username\"\r\n            type=\"username\"\r\n            name=\"username\"\r\n            autoComplete=\"username\"\r\n            // error={emailError}\r\n            value={username}\r\n            onInput={handleUsernameChange}\r\n            autoFocus\r\n            disabled={registerStatus === 1 || registerStatus === 2}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            type=\"name\"\r\n            name=\"name\"\r\n            autoComplete=\"name\"\r\n            // error={emailError}\r\n            value={name}\r\n            onInput={handleNameChange}\r\n            disabled={registerStatus === 1 || registerStatus === 2}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            value={password}\r\n            onInput={handlePasswordChange}\r\n            disabled={registerStatus === 1 || registerStatus === 2}\r\n          />\r\n          {/* <Collapse in={role==='parent'}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required={role==='parent'}\r\n              fullWidth\r\n              name='groupName'\r\n              label='Family name'\r\n              type='text'\r\n              id='groupName'\r\n              autoComplete='groupName'\r\n              value={groupName}\r\n              onInput={handleGroupNameChange}\r\n              disabled={registerStatus === 1 || registerStatus === 2}\r\n            /> \r\n          </Collapse>\r\n          <Collapse in={role==='child'}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required={role==='child'}\r\n              fullWidth\r\n              name='groupCode'\r\n              label='Family code'\r\n              type='text'\r\n              id='groupCode'\r\n              autoComplete='groupCode'\r\n              value={groupCode}\r\n              onInput={handleGroupCodeChange}\r\n              disabled={registerStatus === 1 || registerStatus === 2}\r\n            /> \r\n          </Collapse> */}\r\n          <Collapse in={responseMessage}>\r\n            {/* <Alert severity=\"error\">{errorMessage}</Alert> */}\r\n            <Card style={{\r\n              backgroundColor: ['','','#81c784','#e57373'][registerStatus],\r\n            }}>\r\n              <div style={{display: 'flex', justifyContent: 'flex-start', alignItems: 'center', padding: 7}}>\r\n                {[null,<HourglassEmptyIcon/>,<DoneIcon/>,<ErrorIcon/>][registerStatus]}\r\n                <div style={{marginLeft: 10, marginRight: 10}}>\r\n                  {responseMessage}\r\n                </div>\r\n                <div style={{flexGrow: 1}}/>\r\n                <IconButton \r\n                  onClick={() => setResponseMessage('')}\r\n                  aria-label=\"close\"\r\n                  size=\"small\"\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\"/>\r\n                </IconButton>\r\n              </div>\r\n            </Card>\r\n          </Collapse>\r\n          <div className={classes.wrapper}>\r\n            <Collapse in={registerStatus===2}>\r\n              <Button\r\n                fullWidth\r\n                variant='outlined'\r\n                style={{backgroundColor: '#81c784', marginBottom: 5}}\r\n                component={RouterLink}\r\n                to='/login'\r\n              >\r\n                Go to Log in\r\n              </Button>\r\n            </Collapse>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              disabled={registerStatus === 1 || registerStatus === 2}\r\n            >\r\n              {registerStatus === 1 ?\r\n              <CircularProgress size={24}/>\r\n              :  \"Register\"\r\n              }\r\n            </Button>\r\n          </div>\r\n          \r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link component={RouterLink} to=\"/login\" variant=\"body2\">\r\n                Already have an account? Log in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright name=\"MAD Mobile Apps\" link=\"https://madmobileapps.com\"/>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport SnackbarAlert from './SnackbarAlert';\r\n\r\nimport { createGroup } from \"../utils/groups\";\r\nimport useApi from '../utils/useApi';\r\n\r\nexport default function CreateGroup(props) {\r\n  \r\n  const [groupName, setGroupName] = useState('');\r\n\r\n  function handleGroupNameChange(event) {\r\n    setGroupName(event.target.value);\r\n  }\r\n\r\n  const [handleCreateGroup, , createGroupStatus, createGroupMessage, [ , , setCreateGroupMessage]] = useApi(\r\n    createGroup, \r\n    () => [groupName],\r\n    () => {},\r\n    () => {},\r\n    () => props.handleLoadGroups()\r\n  );\r\n  \r\n  // async function handleCreateGroup(event){\r\n  //   event.preventDefault();\r\n\r\n  //   const result = await createGroup(groupName);\r\n  //   // console.log(result);\r\n  //   props.handleLoadGroups();\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => {e.preventDefault(); handleCreateGroup()}}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          id=\"groupName\"\r\n          label=\"Group name\"\r\n          type=\"text\"\r\n          name=\"groupName\"\r\n          autoComplete=\"groupName\"\r\n          // error={emailError}\r\n          value={groupName}\r\n          onInput={handleGroupNameChange}\r\n          disabled={createGroupStatus===1}\r\n          autoFocus\r\n        />\r\n        <br/>\r\n        <Button \r\n          variant='contained'\r\n          disableElevation\r\n          disabled={createGroupStatus===1}\r\n          color='secondary'\r\n          type='submit'\r\n        >\r\n          {createGroupStatus === 1 ? \r\n            <CircularProgress size={24}/>\r\n            : 'Create group'\r\n          }\r\n        </Button>\r\n      </form>\r\n      <SnackbarAlert message={createGroupMessage} setMessage={setCreateGroupMessage} status={createGroupStatus}/>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport SnackbarAlert from './SnackbarAlert';\r\n\r\nimport { joinGroup } from \"../utils/groups\";\r\nimport useApi from '../utils/useApi';\r\n\r\nexport default function JoinGroup(props) {\r\n  \r\n  const [groupCode, setGroupCode] = useState('');\r\n\r\n  function handleGroupCodeChange(event) {\r\n    setGroupCode(event.target.value.toUpperCase());\r\n  }\r\n  \r\n  const [handleJoinGroup, , joinGroupStatus, joinGroupMessage, [,,setJoinGroupMessage]] = useApi(\r\n    joinGroup, \r\n    () => [groupCode],\r\n    () => {},\r\n    () => {},\r\n    () => props.handleLoadGroups()\r\n  );\r\n\r\n  // async function handleJoinGroup(event){\r\n  //   event.preventDefault();\r\n\r\n  //   const result = await joinGroup(groupCode);\r\n  //   console.log(result);\r\n  //   props.handleLoadGroups();\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={(e) => {e.preventDefault(); handleJoinGroup()}}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          id=\"groupCode\"\r\n          label=\"Group code\"\r\n          type=\"groupCode\"\r\n          name=\"groupCode\"\r\n          autoComplete=\"groupCode\"\r\n          // error={emailError}\r\n          value={groupCode}\r\n          onInput={handleGroupCodeChange}\r\n          disabled={joinGroupStatus===1}\r\n          autoFocus\r\n        />\r\n        <br/>\r\n        <Button \r\n          variant='contained'\r\n          disableElevation\r\n          disabled={joinGroupStatus===1}\r\n          color='secondary'\r\n          type='submit'\r\n        >\r\n        {joinGroupStatus === 1 ? \r\n          <CircularProgress size={24}/>\r\n          : 'Join group'\r\n        }\r\n        </Button>\r\n      </form>\r\n      <SnackbarAlert message={joinGroupMessage} setMessage={setJoinGroupMessage} status={joinGroupStatus}/>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, useParams, Link as RouterLink, useRouteMatch, Redirect, useLocation } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { createTask, deleteTask, getTask, listGroupTasks } from \"../utils/tasks\";\r\nimport useApi from \"../utils/useApi\";\r\nimport SnackbarAlert from \"./SnackbarAlert\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>  ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    backgroundColor: 'rgb(0,0,0,.7)',\r\n  },\r\n  closeButton: {\r\n    backgroundColor: theme.palette.secondary.main,\r\n    color: '#111',\r\n    width: 36,\r\n    height: 36,\r\n    '&:hover': {\r\n      backgroundColor: '#f55',\r\n      color: '#fff'\r\n    }\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  formControl: {\r\n    minWidth: '10rem',\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n  },\r\n  formControl2: {\r\n    minWidth: '6rem',\r\n    marginBottom: 10,\r\n    marginLeft: 7,\r\n  },\r\n  day: {\r\n    margin: 2,\r\n    color: '#bbb'\r\n  },\r\n  dayIncluded: {\r\n    margin: 2,\r\n    color: '#000',\r\n  },\r\n}));\r\n\r\n\r\nconst days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\nexport default function Tasks(props) {\r\n  const { group, groupUsers } = props;\r\n  const classes = useStyles();\r\n  const { path, url } = useRouteMatch();\r\n\r\n  // list all tasks\r\n  const [filterUser, setFilterUser] = useState('');\r\n  const [handleGetTasks, tasks, tasksStatus, tasksMessage] = useApi(listGroupTasks, () => [group]);\r\n\r\n  // const [tasks, setTasks] = useState(null);\r\n  // const [tasksStatus, setTasksStatus] = useState(0);\r\n  // const [tasksMessage, setTasksMessage] = useState('');\r\n\r\n  // async function handleGetTasks() {\r\n  //   setTasksStatus(1);\r\n\r\n  //   const result = await listGroupTasks(group);\r\n  //   console.log(result);\r\n\r\n  //   if (result.success) {\r\n  //     setTasksStatus(2);\r\n  //     setTasks(result.response.Items);\r\n  //   } else {\r\n  //     setTasksStatus(3);\r\n  //     setTasksMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (group && group.role.S === 'owner' && path ===`/groups/${group.groupID.S}/tasks`) {\r\n      handleGetTasks();\r\n    }\r\n  }, [group, path]);\r\n\r\n  // create task\r\n  const [showCreateTask, setShowCreateTask] = useState(false);\r\n  const [taskName, setTaskName] = useState('');\r\n  const [taskDescription, setTaskDescription] = useState('');\r\n  const [selectedDays, setSelectedDays] = useState([])\r\n  const [assignedUser, setAssignedUser] = useState('');\r\n\r\n  function handleCloseCreateTask() {\r\n    setShowCreateTask(false);\r\n  }\r\n\r\n  const [handleCreateTask, , createTaskStatus, createTaskMessage, [,,setCreateTaskMessage]] = useApi(\r\n    createTask, \r\n    () => [group, assignedUser, taskName, taskDescription, selectedDays],\r\n    (e) => {\r\n      e.preventDefault();\r\n    }\r\n  );\r\n\r\n  // const [createTaskStatus, setCreateTaskStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  // const [createTaskMessage, setCreateTaskMessage] = useState(''); \r\n\r\n  // async function handleCreateTask(event) {\r\n  //   event.preventDefault();\r\n  //   setCreateTaskStatus(1);\r\n\r\n  //   const result = await createTask(group, assignedUser, taskName, taskDescription, selectedDays);\r\n  //   console.log(result);\r\n\r\n  //   if(result.success) {\r\n  //     setCreateTaskStatus(2);\r\n  //     setCreateTaskMessage('Task created successfully!');\r\n  //   } else {\r\n  //     setCreateTaskStatus(3);\r\n  //     setCreateTaskMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  // delete task\r\n  const [deleteTaskID, setDeleteTaskID] = useState('');\r\n\r\n  const [handleDeleteTask, , deleteTaskStatus, deleteTaskMessage, [,,setDeleteTaskMessage]] = useApi(\r\n    deleteTask, \r\n    () => [group],\r\n    (userID, taskID) => {\r\n      setDeleteTaskID(taskID);\r\n    },\r\n    (userID, taskID) => {\r\n      setDeleteTaskID('');\r\n    },\r\n    () => handleGetTasks()\r\n  );\r\n\r\n  // const [deleteTaskStatus, setDeleteTaskStatus] = useState(0);\r\n  // const [deleteTaskMessage, setDeleteTaskMessage] = useState('');\r\n\r\n  // async function handleDeleteTask(task) {\r\n  //   setDeleteTaskStatus(1);\r\n  //   setDeleteTaskID(task.taskID.S);\r\n\r\n  //   const result = await deleteTask(task.userID.S, group, task.taskID.S);\r\n  //   console.log(result);\r\n  //   setDeleteTaskID('');\r\n\r\n  //   if(result.success) {\r\n  //     setDeleteTaskStatus(2);\r\n  //     handleGetTasks();\r\n  //   } else {\r\n  //     setDeleteTaskStatus(3);\r\n  //     setDeleteTaskMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    group ?\r\n    <Switch>\r\n      <Route exact path={path}>\r\n        {group.role.S === 'owner' ? \r\n          <React.Fragment>\r\n            <h3>All group tasks ({tasksStatus === 2 && tasks && tasks.length})</h3>\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', backgroundColor: '#eee', paddingLeft: 5, paddingRight: 10}}>\r\n              <div style={{display: 'flex', alignItems: 'center', height:'100%'}}>\r\n                <IconButton disabled={tasksStatus < 2} onClick={() => handleGetTasks()}>\r\n                  <RefreshIcon/>\r\n                </IconButton>\r\n                <IconButton onClick={()=>setShowCreateTask(true)}>\r\n                  <AddIcon/>\r\n                </IconButton>\r\n              </div>\r\n              <div style={{display: 'flex', alignItems: 'center', justifyContent: 'flex-end'}}>\r\n                {/* <FormControl className={classes.formControl2}>\r\n                  <InputLabel>Filter day</InputLabel>\r\n                  <Select\r\n                    labelId=\"filter-user-label\"\r\n                    id=\"filter-user\"\r\n                    value={assignedUser}\r\n                    onChange={(e) => setAssignedUser(e.target.value)}\r\n                    MenuProps={{ onExited: () => {\r\n                      document.activeElement.blur();\r\n                    }}}\r\n                  >\r\n                    <MenuItem value='' key='blank-user'>No filter</MenuItem>\r\n                    {groupUsers && groupUsers.map((user) => (\r\n                      <MenuItem value={user} key={`group-user-${user.userID.S}`}>\r\n                        <div style={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          justifyContent: 'flex-start',\r\n                          alignItems: 'start'\r\n                        }}>\r\n                          <div>{user.userName.S}</div>\r\n                          <div style={{color: '#888'}}>{user.userID.S}</div>\r\n                        </div>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl> */}\r\n                <FormControl className={classes.formControl2}>\r\n                  <InputLabel>Filter user</InputLabel>\r\n                  <Select\r\n                    labelId=\"filter-user-label\"\r\n                    id=\"filter-user\"\r\n                    value={filterUser}\r\n                    onChange={(e) => setFilterUser(e.target.value)}\r\n                    MenuProps={{ onExited: () => {\r\n                      document.activeElement.blur();\r\n                    }}}\r\n                  >\r\n                    <MenuItem value='' key='blank-user'>No filter</MenuItem>\r\n                    {groupUsers && groupUsers.map((user) => (\r\n                      <MenuItem value={user.userID.S} key={`group-user-${user.userID.S}`}>\r\n                        <div style={{\r\n                          display: 'flex',\r\n                          flexDirection: 'column',\r\n                          justifyContent: 'flex-start',\r\n                          alignItems: 'start'\r\n                        }}>\r\n                          <div>{user.userName.S}</div>\r\n                          <div style={{color: '#888'}}>{user.userID.S}</div>\r\n                        </div>\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n\r\n            {tasksStatus === 1 ? \r\n              <CircularProgress/>\r\n              : (tasksStatus === 2 && tasks) ?\r\n              <List style={{marginBottom: 30}}>\r\n                {tasks.length === 0 && 'There are currently no tasks in this group.'}\r\n                {tasks.map((task, index) => {\r\n                  if(!(filterUser && filterUser.length > 0) || filterUser === task.userID.S) {\r\n                    return (\r\n                      <ListItem \r\n                        key={`task-${index}-${task.taskID.S}`} \r\n                        button \r\n                        component={RouterLink} \r\n                        to={{\r\n                          pathname: `${url}/${task.taskID.S}`,\r\n                          state: {\r\n                            userID: task.userID.S,\r\n                          },\r\n                        }}\r\n                        style={{ borderWidth: 1, borderColor: '#333', borderStyle: 'solid', borderRadius: 5, marginBottom: 5 }}\r\n                      >\r\n                        <div style={{display: 'flex', width: '100%', alignItems:'center', justifyContent: 'space-between'}}>\r\n                          <ListItemText \r\n                            primary={task.taskName.S.length > 10 ? `${task.taskName.S.substring(0,7)}...` : task.taskName.S}\r\n                            secondary={task.taskDescription.S.length > 50 ? `${task.taskDescription.S.substring(0, 47)}...` : task.taskDescription.S}\r\n                            style={{width: '20%', overflowWrap: 'anywhere', marginRight: 5}}\r\n                          />\r\n                          <ListItemText\r\n                            primary={task.userName.S}\r\n                            secondary={task.userID.S}\r\n                            style={{overflowWrap: 'anywhere'}}\r\n                          />\r\n                          <div style={{display: 'flex', justifyContent: 'flex-end', marginLeft: 10}}>  \r\n                            {days.map((day) => {\r\n                              const included = task.taskDays.SS.includes(day);\r\n                              return (\r\n                              //task.taskDays.SS.includes(day) ? <Chip key={day} label={day} style={{margin: 2}} /> : null\r\n                                <div className={included ? classes.dayIncluded : classes.day}>{day[0]}</div>\r\n                              );\r\n                            })}\r\n                          </div>\r\n                        </div>\r\n                        <ListItemSecondaryAction>\r\n                          {\r\n                            deleteTaskStatus === 1 && deleteTaskID === task.taskID.S ?\r\n                              <CircularProgress size={24}/>\r\n                            : <IconButton edge='end' onClick={() => handleDeleteTask([task.userID.S], [task.taskID.S])} disabled={deleteTaskStatus===1}>\r\n                                <DeleteIcon/>\r\n                              </IconButton>\r\n                          }\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    );\r\n                  }\r\n                })}\r\n              </List>\r\n              : \r\n              <div>\r\n                <p>{tasksMessage}</p>\r\n              </div>\r\n            }\r\n            \r\n            <Dialog\r\n              className={classes.backdrop}\r\n              key={'create-task-modal'}\r\n              open={showCreateTask}\r\n              style={{overflow: 'auto'}} \r\n              maxWidth='md'\r\n              fullWidth\r\n              onClose={handleCloseCreateTask}\r\n            >\r\n              <div style={{backgroundColor:'#eee', padding: 40}} >\r\n                <div style={{position: 'relative', float: 'right', top: -20, right: -20,}} onClick={handleCloseCreateTask}>\r\n                  <IconButton className={classes.closeButton}>\r\n                    <CloseIcon/>\r\n                  </IconButton>\r\n                </div>\r\n                <Typography variant='h5'>Create task</Typography>\r\n                <form onSubmit={(e) => handleCreateTask([],[e])}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    id=\"taskName\"\r\n                    label=\"Task name\"\r\n                    type=\"text\"\r\n                    name=\"taskName\"\r\n                    // error={emailError}\r\n                    value={taskName}\r\n                    onInput={(e) => {setTaskName(e.target.value);}}\r\n                    disabled={createTaskStatus===1}\r\n                  />\r\n                  <br/>\r\n                  <TextField\r\n                    multiline\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    id=\"taskDescription\"\r\n                    label=\"Task description\"\r\n                    type=\"text\"\r\n                    name=\"taskDescription\"\r\n                    // error={emailError}\r\n                    value={taskDescription}\r\n                    onInput={(e) => {setTaskDescription(e.target.value);}}\r\n                    style={{width: '100%', maxWidth: 500}}\r\n                    disabled={createTaskStatus===1}\r\n                  />\r\n                  <br/>\r\n                  <FormControl required className={classes.formControl} disabled={createTaskStatus===1}>\r\n                    <InputLabel id=\"demo-mutiple-chip-label\">Days due</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-mutiple-chip-label\"\r\n                      id=\"demo-mutiple-chip\"\r\n                      multiple\r\n                      value={selectedDays}\r\n                      onChange={(e) => {setSelectedDays(e.target.value);}}\r\n                      input={<Input id=\"select-multiple-chip\" />}\r\n                      renderValue={(selected) => (\r\n                        <div className={classes.chips}>\r\n                          {days.map((value) => (\r\n                            selected.includes(value) && <Chip key={value} label={value} className={classes.chip} />\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                      MenuProps={{ onExited: () => {\r\n                        document.activeElement.blur();\r\n                      }}}\r\n                      // MenuProps={MenuProps}\r\n                    >\r\n                      {days.map((day) => (\r\n                        <MenuItem key={`day-${day}`} value={day}>\r\n                          <Checkbox checked={selectedDays.includes(day)} />\r\n                          <ListItemText primary={day}/>\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br/>\r\n                  <FormControl required className={classes.formControl} disabled={createTaskStatus===1}>\r\n                    <InputLabel id=\"demo-simple-select-label\">Assigned user</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={assignedUser}\r\n                      onChange={(e) => setAssignedUser(e.target.value)}\r\n                      MenuProps={{ onExited: () => {\r\n                        document.activeElement.blur();\r\n                      }}}\r\n                    >\r\n                      {groupUsers && groupUsers.map((user) => (\r\n                        <MenuItem value={user} key={`group-user-${user.userID.S}`}>\r\n                          <div style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            justifyContent: 'flex-start',\r\n                            alignItems: 'start'\r\n                          }}>\r\n                            <div>{user.userName.S}</div>\r\n                            <div style={{color: '#888'}}>{user.userID.S}</div>\r\n                          </div>\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                  <br/>\r\n                  <br/>\r\n                  <Button style={{width: 150}} variant='contained' color='secondary' type='submit' disableElevation disabled={createTaskStatus===1}>\r\n                    {createTaskStatus === 1 ? <CircularProgress size={24}/> : 'Create task'}\r\n                  </Button>\r\n                </form>\r\n              </div>\r\n            </Dialog>\r\n\r\n            <SnackbarAlert message={createTaskMessage} setMessage={setCreateTaskMessage} status={createTaskStatus}/>\r\n            <SnackbarAlert message={deleteTaskMessage} setMessage={setDeleteTaskMessage} status={deleteTaskStatus}/>\r\n          </React.Fragment> \r\n        : <Redirect to={`/groups/${group.groupID.S}`}/>\r\n        }\r\n      </Route>\r\n      <Route path={`${path}/:taskID`}>\r\n        <Task group={group}/>\r\n      </Route>\r\n    </Switch>\r\n    : <Redirect to='/groups'/>\r\n  );\r\n} \r\n\r\n\r\nfunction Task(props) {\r\n  const { group } = props;\r\n  const { taskID } = useParams();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n\r\n  // get task\r\n  const [handleGetTask, task, taskStatus, taskMessage] = useApi(getTask, () => [group, taskID]);\r\n\r\n  // const [task, setTask] = useState(null);\r\n  // const [taskStatus, setTaskStatus] = useState(0);\r\n  // const [taskMessage, setTaskMessage] = useState('');\r\n\r\n  // async function handleGetTask() {\r\n  //   setTaskStatus(1);\r\n\r\n  //   const result = await getTask(group, taskID);\r\n  //   console.log(result);\r\n\r\n  //   if(result.success) {\r\n  //     setTaskStatus(2);\r\n  //     setTask(result.response);\r\n  //   } else {\r\n  //     setTaskStatus(3);\r\n  //     setTaskMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => handleGetTask(), [taskID, group, location]);\r\n\r\n  return (\r\n    taskStatus === 1 ? (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: '100%' }}\r\n      >\r\n        <Grid item xs={3}>\r\n          <CircularProgress/>\r\n        </Grid>\r\n      </Grid>\r\n    ) \r\n    : taskStatus === 2 && task ? (\r\n      <div>\r\n        <Typography variant='h4'>{task.taskName.S}</Typography>\r\n        <Typography variant='h6'>Group: {group.groupName.S} <span style={{color: '#888'}}>({task.groupID.S})</span></Typography>\r\n        <Typography variant='h6'>Assigned to: {task.userName.S} <span style={{color: '#888'}}>({task.userID.S})</span></Typography>\r\n        <div className={classes.chips} style={{marginTop:5, marginBottom: 15}}>\r\n          {days.map((value) => (\r\n            task.taskDays.SS.includes(value) && <Chip key={value} label={value} className={classes.chip} />\r\n          ))}\r\n        </div>\r\n        <p style={{overflowWrap: 'anywhere'}}>\r\n          {task.taskDescription.S}\r\n        </p>\r\n      </div>\r\n    )\r\n    : (\r\n      <div>\r\n        {taskMessage}\r\n      </div>\r\n    )\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, useParams, Link as RouterLink, useLocation, Redirect, useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nimport Tasks from './Tasks';\r\n\r\nimport { deleteGroup, listUsersInGroup, removeUserFromGroup } from \"../utils/groups\";\r\nimport useCheckMobile from \"../utils/useCheckMobile\";\r\nimport { listUserGroupTasks } from \"../utils/tasks\";\r\nimport useApi from \"../utils/useApi\";\r\n\r\nexport default function Groups(props) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/groups'>\r\n        <h3>Please select a group from the side menu.</h3>\r\n      </Route>\r\n      <Route path='/groups/:groupID'>\r\n        <Group {...props} />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nconst bottomNavLinks = [\r\n  {\r\n    path: '',\r\n    label: 'My tasks',\r\n    icon: <AssignmentIcon/>,\r\n    adminOnly: false,\r\n  },\r\n  {\r\n    path: '/users',\r\n    label: 'Users',\r\n    icon: <GroupIcon/>,\r\n    adminOnly: false,\r\n  },\r\n  {\r\n    path: '/info',\r\n    label: 'Info',\r\n    icon: <InfoIcon/>,\r\n    adminOnly: false,\r\n  },\r\n  {\r\n    path: '/tasks',\r\n    label: 'Manage',\r\n    icon: <SettingsIcon/>,\r\n    adminOnly: true,\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  day: {\r\n    margin: 2,\r\n    color: '#bbb'\r\n  },\r\n  dayIncluded: {\r\n    margin: 2,\r\n    color: '#000',\r\n  },\r\n}));\r\n\r\nconst days = [\r\n  'Sunday',\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday'\r\n];\r\n\r\nfunction Group(props) {\r\n  const { groupID } = useParams();\r\n  const isMobile = useCheckMobile();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const { groups, groupsStatus, handleLoadGroups } = props;\r\n\r\n  // navigation\r\n  const [navigation, setNavigation] = useState(0);\r\n  useEffect(() => {\r\n    bottomNavLinks.forEach((val, index) => {\r\n      if(location.pathname === `/groups/${groupID}${val.path}`) {\r\n        setNavigation(index);\r\n      }\r\n    });\r\n  }, [groupID, location]);\r\n\r\n  const [group, setGroup] = useState(null);\r\n  const [groupAuth, setGroupAuth] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  const [groupAuthMessage, setGroupAuthMessage] = useState('');\r\n\r\n  useEffect(checkGroups, [groupID, groupsStatus, groups]);\r\n\r\n\r\n  function checkGroups() {\r\n    // console.log(groupID);\r\n    // console.log(groups);\r\n    setGroupAuth(0);\r\n    if (groupsStatus === 1) {\r\n      setGroupAuth(1);\r\n      setGroup(null);\r\n      return;\r\n    }\r\n\r\n    if(groupsStatus !== 2) {\r\n      setGroupAuth(3);\r\n      setGroupAuthMessage('Groups not loaded. Try again later.');\r\n      setGroup(null);\r\n      return;\r\n    }\r\n\r\n    for(let i = 0; i < groups.length; i++) {\r\n      if (groups[i].groupID.S === groupID) {\r\n        setGroupAuth(2);\r\n        setGroup(groups[i]);\r\n        return;\r\n      }\r\n    }\r\n\r\n    setGroupAuth(3);\r\n    setGroupAuthMessage('You do not have access to this group.');\r\n    setGroup(null);\r\n  }\r\n\r\n\r\n  // tasks\r\n  const [handleGetUserTasks, userTasks, userTasksStatus, userTasksMessage] = useApi(listUserGroupTasks, () => [group.groupID.S]);\r\n\r\n  useEffect(() => {\r\n    if (group && groupAuth === 2 && location.pathname === `/groups/${group.groupID.S}`) {\r\n      handleGetUserTasks();\r\n    }\r\n  }, [group, groupAuth, location]);\r\n  \r\n  // const [userTasks, setUserTasks] = useState(null);\r\n  // const [userTasksStatus, setUserTasksStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  // const [userTasksMessage, setUserTasksMessage] = useState('');\r\n\r\n  // async function handleGetUserTasks() {\r\n  //   setUserTasksStatus(1);\r\n  //   const result = await listUserGroupTasks(group.groupID.S);\r\n  //   console.log(result);\r\n\r\n  //   if(result.success) {\r\n  //     setUserTasks(result.response.Items);\r\n  //     setUserTasksStatus(2);\r\n  //   } else {\r\n  //     setUserTasksStatus(3);\r\n  //     setUserTasksMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n\r\n  // users\r\n  const [handleGetGroupUsers, groupUsers, groupUsersStatus, groupUsersMessage] = useApi(listUsersInGroup, () => [group.groupID.S]);\r\n\r\n  // const [groupUsers, setGroupUsers] = useState(null);\r\n  // const [groupUsersStatus, setGroupUsersStatus] = useState(0); // 0 = waiting, 1 = loading, 2 = success, 3 = error\r\n  // const [groupUsersMessage, setGroupUsersMessage] = useState('');\r\n\r\n  // async function handleGetGroupUsers() {\r\n  //   setGroupUsersStatus(1);\r\n  //   const result = await listUsersInGroup(group.groupID.S);\r\n  //   console.log(result);\r\n\r\n  //   if (result.success) {\r\n  //     setGroupUsers(result.response.Items);\r\n  //     setGroupUsersStatus(2);\r\n  //   } else {\r\n  //     setGroupUsersStatus(3);\r\n  //     setGroupUsersMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    if (group && groupAuth === 2) {\r\n      handleGetGroupUsers();\r\n    }\r\n  }, [group, groupAuth]);\r\n\r\n  useEffect(() => {\r\n    if (group && groupAuth === 2 && location.pathname === `/groups/${group.groupID.S}/users`) {\r\n      handleGetGroupUsers();\r\n    }\r\n  }, [group, groupAuth, location]);\r\n  \r\n  // useEffect(() => {\r\n  //   if (group && groupAuth === 2 && bottomNavLinks[navigation].path === '/users' && !groupUsers) {\r\n  //     handleGetGroupUsers();\r\n  //   }\r\n  // }, [group, navigation]);\r\n\r\n  // delete user\r\n\r\n  const [deleteUserID, setDeleteUserID] = useState('');\r\n  const [handleRemoveUser, , deleteUserStatus, deleteUserMessage] = useApi(\r\n    removeUserFromGroup, \r\n    ()=>[group],\r\n    (user) => {\r\n      if(user) {\r\n        setDeleteUserID(user.userID.S);\r\n      }\r\n    },\r\n    (user) => {\r\n      if(user) {\r\n        setDeleteUserID('');\r\n      }\r\n    },\r\n    async (user) => {\r\n      if(user) {\r\n        handleGetGroupUsers();\r\n      } else {\r\n        await handleLoadGroups();\r\n        history.push('/groups');\r\n      }\r\n    }\r\n  );\r\n\r\n  // const [deleteUserStatus, setDeleteUserStatus] = useState(0);\r\n  // const [deleteUserMessage, setDeleteUserMessage] = useState('');\r\n\r\n  // async function handleRemoveUser(user) {\r\n  //   setDeleteUserStatus(1);\r\n  //   if(user) {\r\n  //     setDeleteUserID(user.userID.S);\r\n  //   }\r\n\r\n  //   const result = await removeUserFromGroup(group, user);\r\n  //   console.log(result);\r\n\r\n  //   if(user) {\r\n  //     setDeleteUserID('');\r\n  //   }\r\n\r\n  //   if(result.success) {\r\n  //     if(user) { \r\n  //       setDeleteUserStatus(2);\r\n  //       handleGetGroupUsers();\r\n  //     } else {\r\n  //       await handleLoadGroups();\r\n  //       setDeleteUserStatus(2);\r\n  //       history.push('/groups');\r\n  //     }\r\n  //   } else {\r\n  //     setDeleteUserStatus(3);\r\n  //     setDeleteUserMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  // delete group\r\n  const [handleDeleteGroup, , deleteGroupStatus, deleteGroupMessage] = useApi(\r\n    deleteGroup, \r\n    () => [group],\r\n    null,\r\n    null,\r\n    async () => {\r\n      await handleLoadGroups();\r\n      history.push('/groups');\r\n    }\r\n  );\r\n\r\n  // const [deleteGroupStatus, setDeleteGroupStatus] = useState(0);\r\n  // const [deleteGroupMessage, setDeleteGroupMessage] = useState('');\r\n\r\n  // async function handleDeleteGroup() {\r\n  //   setDeleteGroupStatus(1);\r\n\r\n  //   const result = await deleteGroup(group);\r\n  //   console.log(result);\r\n\r\n  //   if(result.success) {\r\n  //     await handleLoadGroups();\r\n  //     setDeleteGroupStatus(2);\r\n  //     history.push('/groups');\r\n  //   } else {\r\n  //     setDeleteGroupStatus(3);\r\n  //     setDeleteGroupMessage(result.message);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    groupAuth === 1 ? (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ minHeight: '100vh' }}\r\n      >\r\n        <Grid item xs={3}>\r\n          <CircularProgress/>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n    : groupAuth === 2 ? (\r\n      <React.Fragment>\r\n        <Switch>\r\n          <Route exact path={`/groups/${groupID}`}>\r\n            <div style={{display: 'flex', alignItems: 'center'}}>\r\n              <IconButton disabled={userTasksStatus < 2} onClick={() => handleGetUserTasks()}>\r\n                <RefreshIcon/>\r\n              </IconButton>\r\n              <Typography variant='h6'>{userTasksStatus === 2 && userTasks && `You have ${userTasks.length} tasks in this group`}</Typography>\r\n            </div>\r\n            {userTasksStatus === 1 ? \r\n              <CircularProgress/>\r\n              : (userTasksStatus === 2 && userTasks) ?\r\n              <List style={{marginBottom: 30}}>\r\n                {userTasks.length === 0 && 'You do not have any tasks at this time.'}\r\n                {userTasks.map((task, index) => (\r\n                  <ListItem \r\n                    key={`user-task-${index}-${task.taskID.S}`}\r\n                    button\r\n                    component={RouterLink}\r\n                    to={`/groups/${groupID}/tasks/${task.taskID.S}`}\r\n                    style={{ borderWidth: 1, borderColor: '#333', borderStyle: 'solid', borderRadius: 5, marginBottom: 5 }}\r\n                  >\r\n                    <div style={{display: 'flex', width: '100%', alignItems:'center', justifyContent: 'space-between'}}>\r\n                      <ListItemText \r\n                        primary={task.taskName.S}\r\n                        secondary={`${task.taskDescription.S.length > 47 ? `${task.taskDescription.S.substring(0, 47)}...` : task.taskDescription.S}`}\r\n                        style={{overflowWrap: 'anywhere'}}\r\n                      />\r\n                      <div style={{display: 'flex', justifyContent: 'flex-end', flexGrow: 1, marginLeft: 10}}>  \r\n                        {days.map((day) => {\r\n                          const included = task.taskDays.SS.includes(day);\r\n                          return (\r\n                          //task.taskDays.SS.includes(day) ? <Chip key={day} label={day} style={{margin: 2}} /> : null\r\n                            <div className={included ? classes.dayIncluded : classes.day}>{day[0]}</div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              : \r\n              <div>\r\n                <p>{userTasksMessage}</p>\r\n              </div>\r\n            }\r\n          </Route>\r\n          <Route exact path={`/groups/${groupID}/info`}>\r\n            <div>\r\n              <h3>{group.groupName.S}</h3>\r\n              <p>Group code: {group.groupID.S}</p>\r\n              <p>Your role: {group.role.S}</p>\r\n              {group.role.S === 'owner' ? \r\n                <Button variant='outlined' style={{color: '#f44336', borderColor: '#f44336'}} onClick={() => handleDeleteGroup()}>\r\n                  Delete group\r\n                </Button>\r\n                :\r\n                <Button variant='outlined' style={{color: '#f44336', borderColor: '#f44336'}} onClick={() => handleRemoveUser()}>\r\n                  {deleteUserStatus === 1 ?\r\n                    <CircularProgress size={24}/>\r\n                    : 'Leave group'\r\n                  }\r\n                </Button>\r\n              }\r\n            </div>\r\n          </Route>\r\n          <Route exact path={`/groups/${groupID}/users`}>\r\n            <div style={{display: 'flex', alignItems: 'center'}}>\r\n              <IconButton disabled={groupUsersStatus < 2} onClick={() => handleGetGroupUsers()}>\r\n                <RefreshIcon/>\r\n              </IconButton>\r\n              <Typography variant='h6'>{groupUsersStatus === 2 && groupUsers && `${groupUsers.length} users in group`}</Typography>\r\n            </div>\r\n            {groupUsersStatus === 1 ? \r\n              <CircularProgress/>\r\n              : groupUsersStatus === 2 && groupUsers ?\r\n              <List>\r\n                {groupUsers.map((user, index) => (\r\n                  <ListItem key={`group-user-${index}-${user.userID.S}`}>\r\n                    <ListItemText primary={user.userName.S} secondary={user.userID.S} style={{overflowWrap: 'anywhere'}}></ListItemText>\r\n                    <ListItemText secondary={user.role.S}></ListItemText>\r\n\r\n                    <ListItemSecondaryAction>\r\n                      {group.role.S === 'owner' && user.role.S !== 'owner' && (\r\n                        deleteUserStatus === 1 && deleteUserID === user.userID.S ? \r\n                          <CircularProgress size={24}/>\r\n                        : <IconButton edge='end' onClick={() => handleRemoveUser([], [user])} disabled={deleteUserStatus === 1}>\r\n                            <DeleteIcon/>\r\n                          </IconButton>\r\n                      )}\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n              : \r\n              <div>\r\n                {groupUsersMessage}\r\n              </div>\r\n            }\r\n          </Route>\r\n          <Route path={`/groups/${groupID}/tasks`}>\r\n            <Tasks group={group} groupUsers={groupUsers}/>\r\n          </Route>\r\n          <Route render={() => <Redirect to={`/groups/${groupID}`}/>}/>\r\n        </Switch>\r\n        <BottomNavigation \r\n          showLabels\r\n          value={navigation}\r\n          onChange={(event, newValue) => {\r\n            // setNavigation(newValue);\r\n          }}\r\n          style={{\r\n            position: 'fixed',\r\n            bottom: 0,\r\n            left: isMobile ? 0 : '20rem',\r\n            right: 0,\r\n            backgroundColor: '#e0e0e0'\r\n          }}\r\n        >\r\n          {bottomNavLinks.map((nav, index) => {\r\n            if(group.role.S === 'owner' || !nav.adminOnly) {\r\n              return (\r\n                <BottomNavigationAction \r\n                  key={`bottom-nav-${index}`}\r\n                  label={nav.label}\r\n                  icon={nav.icon}\r\n                  component={RouterLink}\r\n                  to={`/groups/${groupID}${nav.path}`}\r\n                  style={{textDecoration: 'none'}}\r\n                />\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </BottomNavigation>\r\n      </React.Fragment>\r\n    )\r\n    : (\r\n      <div>\r\n        <h3>{groupAuthMessage}</h3>\r\n      </div>\r\n    )\r\n  );\r\n}","import PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport Register from './components/Register';\nimport CreateGroup from './components/CreateGroup';\nimport JoinGroup from './components/JoinGroup';\nimport Group from './components/Groups';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { HashRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#ffa726',\n      },\n      secondary: {\n        main: '#ce93d8',\n        // main: '#f55',\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter basename='/'>\n        <Switch>\n          <PrivateRoute path='/' exact component={Home} selected='/'/>\n          <PrivateRoute path='/about' exact component={About} selected='/about'/>\n          <PrivateRoute path='/logout' exact component={Logout} />\n          <PrivateRoute path='/createGroup' exact component={CreateGroup} selected='/createGroup'/>\n          <PrivateRoute path='/joinGroup' exact component={JoinGroup} selected='/joinGroup'/>\n          <PrivateRoute path='/groups' component={Group} selected='/groups'/>\n          <PublicRoute path='/login' exact component={Login} />\n          <PublicRoute path='/register' exact component={Register} />\n          <Route render={() => <Redirect to=\"/\" />}/>\n        </Switch>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}